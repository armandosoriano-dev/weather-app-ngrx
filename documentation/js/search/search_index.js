var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.068,1,1.43]],["body/components/AppComponent.html",[0,1.923,1,2.48,2,0.33,3,0.29,4,2.215,5,2.215,6,2.215,7,0.252,8,3.118,9,2.215,10,3.758,11,3.524,12,4.101,13,2.912,14,4.87,15,2.912,16,4.87,17,0.33,18,0.858,19,5.781,20,1.559,21,0.413,22,0.028,23,1.37,24,1.274,25,0.67,26,1.186,27,3.703,28,0.825,29,1.274,30,0.29,31,0.457,32,1.588,33,2.912,34,2.912,35,2.912,36,3.457,37,2.215,38,0.661,39,2.215,40,1.588,41,2.215,42,1.588,43,2.215,44,1.588,45,2.215,46,1.588,47,1.028,48,2.215,49,0.02,50,0.02]],["title/modules/AppModule.html",[51,1.233,52,2.201]],["body/modules/AppModule.html",[1,2.777,2,0.29,3,0.256,7,0.222,22,0.028,28,1.461,29,1.122,30,0.35,31,0.403,32,1.399,40,2.549,49,0.018,50,0.018,51,1.654,52,4.303,53,1.783,54,3.052,55,3.052,56,2.953,57,2.747,58,2.747,59,2.747,60,2.747,61,3.247,62,3.554,63,2.953,64,2.154,65,1.951,66,3.263,67,2.953,68,4.473,69,3.766,70,2.407,71,4.473,72,3.263,73,3.263,74,2.154,75,2.747,76,2.154,77,2.747,78,1.122,79,3.263,80,2.747,81,3.263,82,2.407,83,3.263,84,3.263,85,1.951,86,2.953,87,3.263,88,3.263,89,3.263,90,3.263]],["title/components/BaseComponent.html",[0,1.068,40,1.43]],["body/components/BaseComponent.html",[0,1.856,1,1.429,2,0.297,3,0.261,4,1.992,5,1.992,6,1.992,7,0.227,9,1.992,10,3.659,11,3.522,13,2.713,15,2.713,17,0.297,18,0.8,21,0.372,22,0.028,23,1.232,24,1.146,25,0.646,26,1.067,28,1.011,29,1.146,30,0.261,31,0.411,32,1.429,33,2.713,34,2.713,35,2.713,36,3.313,37,1.992,38,0.616,39,1.992,40,2.376,41,1.992,42,1.429,43,1.992,44,1.429,45,1.992,46,1.429,47,0.924,48,1.992,49,0.019,50,0.019,91,2.805,92,1.453,93,4.537,94,4.537,95,2.306,96,4.088,97,1.149,98,4.537,99,3.332,100,1.353,101,4.537,102,2.376,103,1.561,104,4.537,105,3.348,106,3.82,107,4.537,108,1.82,109,2.199]],["title/interfaces/Clouds.html",[110,0.453,111,1.068]],["body/interfaces/Clouds.html",[2,0.305,3,0.268,7,0.233,17,0.305,18,0.814,20,1.973,21,0.515,22,0.028,25,0.583,30,0.439,38,0.465,47,0.949,49,0.019,50,0.019,92,1.096,97,1.518,100,1.67,110,0.879,111,1.794,112,1.266,113,1.02,114,0.653,115,0.922,116,1.096,117,1.362,118,0.762,119,1.589,120,1.177,121,1.675,122,1.67,123,1.266,124,1.675,125,1.266,126,1.675,127,1.266,128,1.266,129,1.266,130,1.266,131,1.266,132,1.096,133,1.266,134,1.266,135,1.266,136,1.266,137,1.266,138,1.266,139,1.266,140,1.266,141,1.266]],["title/interfaces/Coord.html",[110,0.453,121,1.068]],["body/interfaces/Coord.html",[2,0.297,3,0.261,7,0.227,17,0.297,18,0.8,20,1.959,21,0.575,22,0.028,25,0.575,30,0.434,38,0.452,47,0.924,49,0.019,50,0.019,92,1.067,97,1.52,100,1.651,110,0.875,111,1.652,112,1.232,113,0.993,114,0.636,115,0.909,116,1.067,117,1.326,118,0.742,119,1.561,120,1.146,121,1.774,122,1.651,123,1.232,124,1.652,125,1.232,126,1.652,127,1.232,128,2.049,129,2.049,130,1.232,131,1.232,132,1.067,133,1.232,134,1.232,135,1.232,136,1.232,137,1.232,138,1.232,139,1.232,140,1.232,141,1.232]],["title/classes/Load.html",[31,0.412,142,1.233]],["body/classes/Load.html",[2,0.257,3,0.226,7,0.197,17,0.257,18,0.724,21,0.707,22,0.028,23,1.068,24,0.994,25,0.707,26,1.531,28,0.915,30,0.471,31,0.726,38,0.392,49,0.017,50,0.017,78,0.994,95,2.393,97,1.225,102,2.051,103,1.645,114,0.913,115,0.724,118,1.065,142,2.262,143,1.239,144,2.953,145,2.579,146,2.457,147,3.019,148,1.239,149,1.907,150,4.109,151,1.15,152,1.15,153,2.889,154,2.245,155,1.15,156,1.578,157,1.339,158,1.768,159,1.768,160,1.904,161,1.768,162,1.768,163,1.451,164,1.768,165,2.845,166,1.578,167,1.578,168,1.578,169,1.578,170,1.578,171,1.451]],["title/classes/LoadError.html",[31,0.412,159,1.233]],["body/classes/LoadError.html",[2,0.257,3,0.226,7,0.197,17,0.257,18,0.724,21,0.707,22,0.028,23,1.068,24,0.994,25,0.707,26,1.531,28,0.915,30,0.471,31,0.726,38,0.392,49,0.017,50,0.017,78,0.994,95,2.393,97,0.643,102,2.051,103,1.645,114,0.913,115,0.724,118,1.31,142,2.223,143,1.239,144,2.953,145,2.579,146,2.457,147,3.019,148,1.239,149,1.907,151,1.15,152,1.15,154,1.578,155,1.15,156,1.578,157,1.339,158,1.768,159,1.926,160,1.904,161,1.768,162,1.768,163,1.451,164,1.768,165,2.845,166,1.578,167,2.245,168,1.578,169,1.578,170,1.578,171,1.451,172,4.109,173,2.889]],["title/classes/LoadHistory.html",[31,0.412,161,1.233]],["body/classes/LoadHistory.html",[2,0.271,3,0.239,7,0.207,17,0.271,18,0.752,21,0.7,22,0.028,23,1.128,24,1.049,25,0.714,26,0.977,28,0.951,30,0.478,31,0.737,49,0.017,50,0.017,78,1.049,95,2.426,97,0.679,102,2.112,103,1.694,114,0.94,115,0.752,118,1.097,142,2.254,143,1.308,144,2.999,145,2.615,147,2.678,154,1.666,155,1.214,156,1.666,157,1.413,158,1.821,159,1.821,160,1.978,161,1.973,162,1.821,163,1.531,164,1.821,165,2.915,166,1.666,167,1.666,168,2.332,169,1.666,170,1.666,171,1.531,174,3.05]],["title/classes/LoadHistoryError.html",[31,0.412,164,1.233]],["body/classes/LoadHistoryError.html",[2,0.257,3,0.226,7,0.197,17,0.257,18,0.724,21,0.707,22,0.028,23,1.068,24,0.994,25,0.707,26,1.531,28,0.915,30,0.471,31,0.726,38,0.392,49,0.017,50,0.017,78,0.994,95,2.393,97,0.643,102,2.051,103,1.645,114,0.913,115,0.724,118,1.31,142,2.223,143,1.239,144,2.953,145,2.579,146,2.457,147,3.019,148,1.239,149,1.907,151,1.15,152,1.15,154,1.578,155,1.15,156,1.578,157,1.339,158,1.768,159,1.768,160,1.904,161,1.768,162,1.768,163,1.451,164,1.926,165,2.845,166,1.578,167,1.578,168,1.578,169,1.578,170,2.245,171,1.451,175,4.109,176,2.889]],["title/classes/LoadHistorySuccess.html",[31,0.412,162,1.233]],["body/classes/LoadHistorySuccess.html",[2,0.257,3,0.226,7,0.197,17,0.257,18,0.724,21,0.707,22,0.028,23,1.068,24,0.994,25,0.707,26,1.531,28,0.915,30,0.471,31,0.726,38,0.392,49,0.017,50,0.017,78,0.994,95,2.393,97,0.643,102,2.051,103,1.645,114,0.913,115,1.008,118,1.065,142,2.223,143,1.239,144,2.953,145,2.579,146,2.457,147,3.019,148,1.239,149,1.907,151,1.15,152,1.15,154,1.578,155,1.15,156,1.578,157,1.339,158,1.768,159,1.768,160,1.904,161,1.768,162,1.926,163,1.451,164,1.768,165,2.845,166,1.578,167,1.578,168,1.578,169,2.245,170,1.578,171,1.451,177,4.109,178,2.889]],["title/classes/LoadSuccess.html",[31,0.412,158,1.233]],["body/classes/LoadSuccess.html",[2,0.271,3,0.239,7,0.207,17,0.271,18,0.752,21,0.7,22,0.028,23,1.128,24,1.049,25,0.714,26,0.977,28,0.951,30,0.478,31,0.737,49,0.017,50,0.017,78,1.049,95,2.426,97,0.679,102,2.112,103,1.694,114,0.94,115,0.752,118,1.097,142,2.254,143,1.308,144,2.999,145,2.615,147,2.678,154,1.666,155,1.214,156,1.666,157,1.413,158,1.973,159,1.821,160,1.978,161,1.821,162,1.821,163,1.531,164,1.821,165,2.915,166,2.332,167,1.666,168,1.666,169,1.666,170,1.666,171,1.531,179,3.05]],["title/interfaces/Main.html",[110,0.453,122,0.994]],["body/interfaces/Main.html",[2,0.281,3,0.247,7,0.215,17,0.281,18,0.77,20,1.931,21,0.656,22,0.028,25,0.559,30,0.424,38,0.429,47,0.876,49,0.018,50,0.018,92,1.011,97,1.526,100,1.614,110,0.867,111,1.606,112,1.167,113,0.941,114,0.603,115,0.884,116,1.011,117,1.256,118,0.703,119,1.504,120,1.086,121,1.606,122,1.695,123,1.167,124,1.606,125,1.167,126,1.606,127,1.167,128,1.167,129,1.167,130,1.167,131,1.167,132,1.734,133,2.002,134,2.002,135,2.002,136,2.002,137,1.167,138,1.167,139,1.167,140,1.167,141,1.167]],["title/modules/MaterialModule.html",[51,1.233,180,1.994]],["body/modules/MaterialModule.html",[2,0.336,3,0.295,7,0.256,22,0.028,28,1.475,29,1.297,30,0.386,31,0.465,49,0.02,50,0.02,51,1.394,54,2.254,67,3.253,180,2.947,181,3.77,182,5.489,183,3.77,184,5.489,185,3.174,186,3.174,187,5.489,188,3.77,189,5.489,190,3.77,191,5.489,192,3.77,193,5.489,194,3.77,195,5.489,196,3.77,197,5.489,198,3.174,199,3.174,200,5.489,201,3.77,202,3.77,203,5.489,204,3.77]],["title/modules/SharedModule.html",[51,1.233,61,1.822]],["body/modules/SharedModule.html",[2,0.372,3,0.328,7,0.284,22,0.028,28,1.389,29,1.439,30,0.474,31,0.516,32,1.794,49,0.022,50,0.022,51,1.948,53,2.285,54,2.501,55,2.501,56,2.761,61,3.531,63,3.477,64,2.761,65,2.501,67,3.477,180,4.018,205,3.521,206,3.521,207,3.521,208,4.182,209,5.765,210,3.521,211,4.182]],["title/interfaces/State.html",[110,0.453,212,2.201]],["body/interfaces/State.html",[2,0.365,3,0.321,7,0.279,22,0.028,28,1.272,30,0.471,49,0.021,50,0.021,78,1.411,85,2.452,86,3.771,108,2.24,109,2.707,110,0.706,145,2.45,212,4.093,213,2.707,214,4.38,215,5.713,216,4.38,217,3.453,218,2.24,219,3.453,220,4.101,221,4.101,222,4.101,223,2.707,224,3.453,225,3.111,226,4.101,227,4.101,228,4.101,229,4.101,230,4.38,231,3.453,232,2.707]],["title/interfaces/Sys.html",[110,0.453,126,1.068]],["body/interfaces/Sys.html",[2,0.276,3,0.243,7,0.211,17,0.276,18,0.761,20,1.991,21,0.702,22,0.028,25,0.554,30,0.421,38,0.421,47,0.861,49,0.018,50,0.018,92,0.993,97,1.524,100,1.789,110,0.864,111,1.591,112,1.147,113,0.925,114,0.592,115,0.876,116,0.993,117,1.235,118,0.691,119,1.944,120,1.067,121,1.591,122,1.602,123,1.147,124,1.591,125,1.147,126,1.721,127,1.147,128,1.147,129,1.147,130,1.147,131,1.147,132,0.993,133,1.147,134,1.147,135,1.147,136,1.147,137,1.147,138,1.147,139,1.988,140,1.988,141,1.988]],["title/interfaces/Weather.html",[25,0.372,110,0.453]],["body/interfaces/Weather.html",[2,0.286,3,0.252,7,0.219,17,0.286,18,0.78,20,2.082,21,0.638,22,0.028,25,0.608,30,0.427,38,0.436,47,0.891,49,0.018,50,0.018,92,1.029,97,1.51,100,1.806,110,0.87,111,1.621,112,1.188,113,0.958,114,0.614,115,0.892,116,1.029,117,1.279,118,0.716,119,1.523,120,1.105,121,1.621,122,1.806,123,1.188,124,1.621,125,1.188,126,1.621,127,1.188,128,1.188,129,1.188,130,2.018,131,2.018,132,1.029,133,1.188,134,1.188,135,1.188,136,1.188,137,1.188,138,1.188,139,1.188,140,1.188,141,1.188]],["title/components/WeatherCardComponent.html",[0,1.068,42,1.43]],["body/components/WeatherCardComponent.html",[0,1.754,1,1.225,2,0.254,3,0.224,4,1.708,5,1.708,6,1.708,7,0.194,9,1.708,10,3.506,11,3.203,13,2.437,15,2.437,17,0.254,21,0.53,22,0.028,25,0.68,26,1.659,28,1.154,29,0.983,30,0.224,31,0.353,32,1.225,33,2.437,34,2.437,35,2.437,36,3.099,37,1.708,38,0.645,39,1.708,40,1.225,41,1.708,42,2.222,43,1.708,44,1.748,45,1.708,46,1.225,47,0.793,48,1.708,49,0.017,50,0.017,95,1.137,103,1.782,114,1.046,115,0.965,132,1.305,148,1.225,151,1.137,152,1.137,155,1.137,185,2.405,186,4.001,225,1.708,233,3.617,234,4.043,235,2.405,236,4.076,237,4.076,238,4.076,239,4.076,240,4.076,241,2.69,242,5.181,243,4.613,244,2.857,245,5.181,246,4.076,247,2.857,248,2.857,249,3.432,250,2.857,251,2.405,252,1.886,253,2.405,254,2.405,255,2.857,256,2.857,257,4.076,258,4.076,259,3.432,260,4.076,261,4.076]],["title/interfaces/WeatherData.html",[110,0.453,115,0.588]],["body/interfaces/WeatherData.html",[2,0.25,3,0.22,7,0.191,17,0.25,18,0.71,20,1.999,21,0.71,22,0.028,25,0.666,30,0.403,38,0.699,47,0.78,49,0.017,50,0.017,92,1.647,97,1.509,100,1.74,110,0.848,111,1.911,112,1.04,113,0.838,114,0.537,115,0.907,116,0.9,117,1.119,118,0.626,119,1.386,120,0.967,121,1.911,122,1.812,123,1.902,124,1.911,125,1.902,126,1.911,127,1.902,128,1.04,129,1.04,130,1.04,131,1.04,132,0.9,133,1.04,134,1.04,135,1.04,136,1.04,137,1.04,138,1.04,139,1.04,140,1.04,141,1.04]],["title/interfaces/WeatherDataBulkResponse.html",[110,0.453,116,1.068]],["body/interfaces/WeatherDataBulkResponse.html",[2,0.297,3,0.261,7,0.227,17,0.297,18,0.8,20,1.959,21,0.575,22,0.028,25,0.575,30,0.434,38,0.452,47,1.537,49,0.019,50,0.019,92,1.067,97,1.515,100,1.651,110,0.875,111,1.652,112,1.232,113,0.993,114,0.636,115,1.021,116,1.453,117,2.205,118,0.742,119,1.561,120,1.146,121,1.652,122,1.651,123,1.232,124,1.652,125,1.232,126,1.652,127,1.232,128,1.232,129,1.232,130,1.232,131,1.232,132,1.067,133,1.232,134,1.232,135,1.232,136,1.232,137,1.232,138,1.232,139,1.232,140,1.232,141,1.232]],["title/interfaces/WeatherDataErrorResponse.html",[110,0.453,118,0.743]],["body/interfaces/WeatherDataErrorResponse.html",[2,0.297,3,0.261,7,0.227,17,0.297,18,0.8,20,2.022,21,0.575,22,0.028,25,0.575,30,0.434,38,0.452,47,0.924,49,0.019,50,0.019,92,1.067,97,1.515,100,1.651,110,0.875,111,1.652,112,1.232,113,0.993,114,0.636,115,0.909,116,1.067,117,1.326,118,1.011,119,1.994,120,1.906,121,1.652,122,1.651,123,1.232,124,1.652,125,1.232,126,1.652,127,1.232,128,1.232,129,1.232,130,1.232,131,1.232,132,1.067,133,1.232,134,1.232,135,1.232,136,1.232,137,1.232,138,1.232,139,1.232,140,1.232,141,1.232]],["title/interfaces/WeatherDataHistory.html",[110,0.453,113,0.994]],["body/interfaces/WeatherDataHistory.html",[2,0.297,3,0.261,7,0.227,17,0.297,18,0.8,20,1.959,21,0.575,22,0.028,25,0.575,30,0.434,38,0.452,47,0.924,49,0.019,50,0.019,92,1.067,97,1.515,100,1.824,110,0.875,111,1.652,112,1.232,113,1.353,114,1.058,115,1.021,116,1.067,117,1.326,118,0.742,119,1.561,120,1.146,121,1.652,122,1.651,123,1.232,124,1.652,125,1.232,126,1.652,127,1.232,128,1.232,129,1.232,130,1.232,131,1.232,132,1.067,133,1.232,134,1.232,135,1.232,136,1.232,137,1.232,138,1.232,139,1.232,140,1.232,141,1.232]],["title/injectables/WeatherEffects.html",[262,1.674,263,2.201]],["body/injectables/WeatherEffects.html",[2,0.151,3,0.133,7,0.115,17,0.151,18,0.483,21,0.384,22,0.029,23,1.274,24,1.185,25,0.189,26,1.39,28,1.169,29,0.584,30,0.133,31,0.209,38,0.372,49,0.011,50,0.011,74,1.12,76,1.12,78,0.584,92,0.877,100,0.506,102,0.728,103,1.932,106,3.33,113,1.384,114,0.829,115,0.697,119,1.361,120,1.361,122,0.506,142,1.605,145,2.251,148,1.175,151,1.09,152,1.09,155,0.675,157,0.786,158,1.274,159,1.274,161,1.605,162,0.627,164,1.274,218,1.497,225,3.359,230,2.306,241,1.808,262,1.73,263,1.808,264,1.428,265,3.955,266,3.908,267,3.445,268,1.696,269,4.34,270,2.611,271,3.445,272,4.642,273,1.696,274,1.696,275,4.34,276,1.696,277,2.306,278,3.445,279,4.538,280,3.955,281,2.739,282,2.739,283,2.739,284,2.739,285,2.739,286,2.739,287,3.955,288,4.34,289,2.739,290,2.739,291,5.083,292,2.739,293,2.739,294,2.739,295,2.739,296,5.249,297,2.739,298,2.739,299,2.739,300,2.739,301,3.558,302,2.739,303,2.306,304,2.739,305,2.306,306,2.739,307,2.739,308,3.955,309,2.739,310,2.739,311,3.955,312,3.955,313,3.955,314,2.901,315,1.696,316,2.739,317,2.739,318,2.739,319,1.696,320,3.445,321,2.739,322,1.696,323,1.696,324,1.12,325,1.696,326,1.428,327,1.696,328,1.696,329,1.428,330,1.428,331,1.696,332,1.696,333,1.428,334,1.696,335,1.696,336,3.955,337,1.696,338,1.696,339,2.739,340,1.696,341,1.696,342,2.739,343,2.739,344,2.739,345,1.696,346,1.696]],["title/components/WeatherHistoryComponent.html",[0,1.068,44,1.43]],["body/components/WeatherHistoryComponent.html",[0,1.829,1,1.371,2,0.285,3,0.25,4,1.912,5,1.912,6,1.912,7,0.217,9,1.912,10,3.619,11,3.306,13,2.638,15,2.638,17,0.285,18,0.777,21,0.492,22,0.028,25,0.698,26,1.412,28,0.982,29,1.1,30,0.25,31,0.395,32,1.371,33,2.638,34,2.638,35,2.638,36,3.256,37,1.912,38,0.686,39,1.912,40,1.371,41,1.912,42,1.371,43,1.912,44,2.335,45,1.912,46,1.371,47,0.887,48,1.912,49,0.018,50,0.018,103,1.965,114,1.04,132,1.412,146,3.02,148,1.371,151,1.272,152,1.272,233,3.333,252,3.333,259,3.713,262,2.214,314,2.691,347,2.691,348,4.411,349,4.411,350,3.197,351,3.197,352,3.197,353,3.197,354,2.691,355,3.197,356,4.411,357,4.411,358,4.411,359,3.197,360,4.411,361,3.197]],["title/components/WeatherListComponent.html",[0,1.068,46,1.43]],["body/components/WeatherListComponent.html",[0,1.579,1,0.95,2,0.197,3,0.173,4,1.324,5,1.324,6,1.324,7,0.151,9,1.324,10,3.232,11,2.952,13,2.02,15,2.02,17,0.197,18,0.595,20,0.709,21,0.603,22,0.028,23,1.694,24,1.408,25,0.637,26,1.784,28,1.241,29,0.762,30,0.173,31,0.273,32,0.95,33,2.02,34,2.02,35,2.02,36,2.739,37,1.324,38,0.622,39,1.324,40,0.95,41,1.324,42,0.95,43,1.324,44,0.95,45,1.324,46,1.964,47,1.136,48,1.324,49,0.014,50,0.014,78,0.762,95,1.344,96,3.021,97,0.752,103,1.696,108,1.21,109,1.462,113,1.365,144,1.696,147,1.112,148,1.449,151,1.344,152,1.344,155,0.881,198,1.865,199,1.865,212,2.229,218,2.839,225,2.448,233,3.768,241,2.229,243,3.856,249,4.375,266,2.844,301,2.229,303,4.55,324,1.462,330,1.865,362,4.212,363,1.865,364,4.094,365,4.094,366,3.377,367,3.377,368,5.196,369,3.377,370,4.58,371,4.58,372,2.215,373,4.094,374,4.58,375,3.377,376,2.215,377,3.377,378,3.377,379,2.215,380,2.215,381,2.215,382,2.215,383,3.377,384,2.215,385,2.215,386,2.215,387,1.865,388,4.094,389,3.377,390,3.377,391,2.215,392,2.215,393,2.215,394,2.215,395,2.215,396,2.215,397,4.58,398,2.215,399,2.215,400,4.58,401,2.215,402,2.215,403,2.215,404,2.215,405,2.215,406,2.215,407,2.215]],["title/modules/WeatherModule.html",[51,1.233,62,1.994]],["body/modules/WeatherModule.html",[2,0.296,3,0.26,7,0.226,22,0.028,28,1.446,29,1.143,30,0.434,31,0.41,32,1.425,42,2.563,44,2.67,46,2.785,49,0.019,50,0.019,51,1.675,53,1.815,54,3.081,55,1.987,56,2.194,61,3.265,62,3.909,63,2.99,64,2.194,65,1.987,67,2.99,75,2.798,76,2.194,77,2.798,78,1.143,80,2.798,234,2.452,251,4.338,252,2.194,253,2.798,263,2.194,362,2.452,387,2.798,408,2.798,409,2.798,410,3.323,411,2.798,412,3.323,413,4.529,414,4.529,415,2.798,416,3.323,417,3.342,418,3.323,419,3.323,420,3.323,421,3.323]],["title/injectables/WeatherService.html",[262,1.674,270,2.201]],["body/injectables/WeatherService.html",[2,0.338,3,0.297,7,0.258,12,3.193,17,0.338,20,1.763,21,0.552,22,0.028,26,1.584,28,1.382,29,1.305,30,0.297,31,0.468,38,0.672,49,0.02,50,0.02,95,1.509,100,1.13,108,2.072,109,2.503,115,0.668,116,1.214,148,1.627,151,1.969,152,1.969,155,1.509,225,2.958,241,3.265,254,3.193,262,2.764,270,3.265,279,4.635,324,2.503,326,3.193,329,3.193,415,3.193,422,3.193,423,4.947,424,3.793,425,5.834,426,3.793,427,4.947,428,4.947,429,3.793,430,3.793,431,3.793,432,3.793,433,3.793,434,3.793,435,3.793]],["title/interfaces/Wind.html",[110,0.453,124,1.068]],["body/interfaces/Wind.html",[2,0.297,3,0.261,7,0.227,17,0.297,18,0.8,20,1.959,21,0.575,22,0.028,25,0.575,30,0.434,38,0.452,47,0.924,49,0.019,50,0.019,92,1.067,97,1.52,100,1.651,110,0.875,111,1.652,112,1.232,113,0.993,114,0.636,115,0.909,116,1.067,117,1.326,118,0.742,119,1.561,120,1.146,121,1.652,122,1.651,123,1.232,124,1.774,125,1.232,126,1.652,127,1.232,128,1.232,129,1.232,130,1.232,131,1.232,132,1.067,133,1.232,134,1.232,135,1.232,136,1.232,137,2.049,138,2.049,139,1.232,140,1.232,141,1.232]],["title/coverage.html",[436,3.822]],["body/coverage.html",[0,1.716,1,1.157,7,0.184,8,2.271,21,0.301,22,0.028,25,0.301,31,0.69,40,1.157,42,1.157,44,1.157,46,1.157,49,0.016,50,0.016,82,1.99,85,1.613,86,1.781,91,2.271,105,1.99,108,2.137,110,0.85,111,0.864,112,2.26,113,0.804,115,0.475,116,0.864,118,0.601,121,0.864,122,0.804,124,0.864,126,0.864,142,0.998,143,2.396,158,0.998,159,0.998,161,0.998,162,0.998,164,0.998,212,2.582,213,3.331,223,2.582,232,1.781,233,3.037,234,1.99,235,2.271,252,1.781,262,1.964,263,1.781,264,2.271,270,1.781,301,1.781,347,2.271,362,1.99,363,2.271,417,1.99,422,2.271,436,2.271,437,2.698,438,2.698,439,2.698,440,6.775,441,5.047,442,6.258,443,4.44,444,2.698,445,2.698,446,2.271,447,2.698,448,2.698,449,5.047,450,2.698,451,2.698,452,3.395,453,2.271,454,2.271,455,2.271,456,5.764,457,2.698,458,2.698,459,3.911,460,2.698,461,2.698,462,2.271,463,2.271,464,3.293,465,2.271,466,2.698,467,2.698]],["title/dependencies.html",[53,2.189,468,2.79]],["body/dependencies.html",[22,0.028,29,1.406,49,0.021,50,0.021,53,2.233,55,2.444,69,4.371,70,3.83,74,2.698,76,2.698,78,1.406,210,3.441,217,3.441,218,2.233,219,3.441,324,3.427,354,3.441,469,4.087,470,6.698,471,4.087,472,4.087,473,4.087,474,4.087,475,4.087,476,4.087,477,4.087,478,4.087,479,4.087,480,4.087,481,4.087,482,4.087,483,4.087,484,4.087,485,4.087,486,4.087,487,4.087,488,4.087,489,4.087,490,4.087,491,4.087]],["title/miscellaneous/enumerations.html",[492,1.293,493,3.374]],["body/miscellaneous/enumerations.html",[17,0.394,22,0.022,24,2.222,25,0.755,49,0.022,50,0.022,102,2.538,103,2.036,114,1.13,142,2.389,143,1.901,157,2.53,158,1.639,159,1.639,160,2.53,161,1.639,162,1.639,163,2.225,164,1.639,492,2.053,493,3.732,494,3.732]],["title/miscellaneous/functions.html",[223,2.645,492,1.293]],["body/miscellaneous/functions.html",[17,0.424,22,0.026,38,0.775,49,0.023,50,0.023,85,2.851,145,2.448,151,2.271,152,2.271,213,3.147,223,3.147,224,4.014,232,3.768,417,4.211,452,3.517,492,2.209,495,4.014,496,4.014,497,6.109,498,4.767,499,4.767]],["title/index.html",[17,0.248,500,2.79,501,2.79]],["body/index.html",[0,1.76,3,0.296,7,0.257,11,2.066,22,0.02,38,0.513,49,0.02,50,0.02,65,2.261,120,1.301,160,1.752,218,2.066,277,3.184,301,2.496,305,3.184,502,3.781,503,3.781,504,3.781,505,3.781,506,4.937,507,5.828,508,5.497,509,5.497,510,3.184,511,3.781,512,3.781,513,4.937,514,6.316,515,6.316,516,3.781,517,3.781,518,3.781,519,3.781,520,3.781,521,3.781,522,3.781,523,4.628,524,3.781,525,6.046,526,3.781,527,3.781,528,3.781,529,3.781,530,3.781,531,3.184,532,4.937,533,6.046,534,4.937,535,4.937,536,3.781,537,5.828,538,3.781,539,3.781,540,3.781,541,5.497,542,3.781,543,3.781,544,3.781,545,3.781]],["title/modules.html",[51,1.679]],["body/modules.html",[22,0.024,49,0.024,50,0.024,51,1.818,52,3.245,61,2.686,62,2.94,70,4.567,180,2.94,546,6.189,547,6.189,548,6.397,549,4.916,550,4.916]],["title/overview.html",[551,3.822]],["body/overview.html",[0,1.186,1,2.696,22,0.027,30,0.29,31,0.457,32,1.588,40,2.334,42,2.334,44,2.334,46,2.696,49,0.02,50,0.02,51,1.801,52,4.331,53,2.023,54,2.215,55,2.215,56,2.445,57,3.118,58,3.118,59,3.118,60,3.118,61,3.433,62,3.949,63,3.215,64,2.445,65,2.215,110,0.503,180,3.758,205,3.118,206,3.118,207,3.118,262,1.859,408,3.118,409,3.118,411,3.118,551,3.118,552,3.703,553,3.703,554,3.703,555,3.703,556,3.703]],["title/miscellaneous/typealiases.html",[492,1.293,557,4.007]],["body/miscellaneous/typealiases.html",[17,0.438,21,0.548,22,0.027,49,0.024,50,0.024,142,1.818,143,2.108,158,1.818,159,1.818,161,1.818,162,1.818,164,1.818,171,3.107,492,2.278,494,4.139,558,4.916]],["title/miscellaneous/variables.html",[443,2.957,492,1.293]],["body/miscellaneous/variables.html",[17,0.21,21,0.66,22,0.028,23,2.102,24,1.955,25,0.475,38,0.482,49,0.015,50,0.015,74,1.56,82,3.493,85,2.547,86,3.349,92,0.757,96,2.618,100,1.411,105,3.143,108,2.911,111,1.364,119,0.813,121,0.757,122,1.058,123,0.874,124,0.757,125,0.874,126,0.757,127,0.874,128,0.874,129,0.874,130,0.874,131,0.874,132,0.757,133,0.874,134,0.874,135,0.874,136,0.874,137,0.874,138,0.874,139,0.874,140,0.874,141,0.874,213,1.56,214,2.988,216,1.99,218,1.939,231,1.99,232,1.56,333,1.99,443,1.744,446,1.99,452,1.744,453,3.586,454,1.99,455,3.586,462,1.99,463,1.99,464,1.99,465,3.586,492,1.095,495,2.988,496,1.99,510,1.99,523,1.99,531,2.988,559,3.548,560,2.364,561,2.364,562,2.364,563,2.364,564,2.364,565,4.26,566,2.364,567,5.814,568,4.734,569,3.548,570,3.548,571,3.548,572,3.548,573,3.548,574,3.548,575,3.548,576,3.548,577,3.548,578,3.548,579,3.548,580,3.548,581,3.548,582,3.548,583,3.548,584,3.548,585,3.548,586,3.548,587,3.548,588,3.548,589,4.734,590,3.548,591,3.548,592,2.364,593,3.548,594,2.364,595,2.364,596,2.364,597,2.364,598,2.364,599,2.364,600,4.26,601,2.364,602,2.364,603,2.364,604,2.364,605,2.364,606,2.364,607,2.364,608,3.548,609,2.364,610,2.364,611,2.364,612,2.364,613,2.364,614,2.364,615,2.364,616,2.364,617,3.548,618,2.364,619,2.364,620,2.364,621,2.364,622,2.364,623,2.364]]],"invertedIndex":[["",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":440,"title":{},"body":{"coverage.html":{}}}],["0.2.4",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["0.2064",{"_index":610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":442,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":441,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["03n",{"_index":598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1/1",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":445,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["10000",{"_index":603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1007",{"_index":601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":556,"title":{},"body":{"overview.html":{}}}],["145.77",{"_index":594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1485720272",{"_index":612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1485766550",{"_index":613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1485790200",{"_index":607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["16.92",{"_index":595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["160",{"_index":605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":554,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":479,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2172797",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.6",{"_index":604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["300.15",{"_index":600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3433955",{"_index":577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3448439",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3871336",{"_index":574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["390f49ffd9f3bf1b179bdafb76571fec",{"_index":573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3936456",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":552,"title":{},"body":{"overview.html":{}}}],["4.1.1",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":553,"title":{},"body":{"overview.html":{}}}],["50",{"_index":444,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":555,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":511,"title":{},"body":{"index.html":{}}}],["6.2.0",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["6.2.2",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["6.4.3",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["60000",{"_index":590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74",{"_index":602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["802",{"_index":596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8166",{"_index":609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_state",{"_index":499,"title":{},"body":{"miscellaneous/functions.html":{}}}],["action",{"_index":145,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/State.html":{},"injectables/WeatherEffects.html":{},"miscellaneous/functions.html":{}}}],["action.payload.join",{"_index":283,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["actionreduc",{"_index":215,"title":{},"body":{"interfaces/State.html":{}}}],["actionreducermap",{"_index":214,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["actual_compon",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["add",{"_index":503,"title":{},"body":{"index.html":{}}}],["air",{"_index":579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alias",{"_index":558,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alreadi",{"_index":340,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["angular",{"_index":508,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":469,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":183,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/common",{"_index":210,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":415,"title":{},"body":{"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["angular/compil",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":354,"title":{},"body":{"components/WeatherHistoryComponent.html":{},"dependencies.html":{}}}],["angular/material/bottom",{"_index":185,"title":{},"body":{"modules/MaterialModule.html":{},"components/WeatherCardComponent.html":{}}}],["angular/material/button",{"_index":188,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/card",{"_index":190,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/icon",{"_index":192,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/list",{"_index":194,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/progress",{"_index":201,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/sidenav",{"_index":196,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/material/snack",{"_index":198,"title":{},"body":{"modules/MaterialModule.html":{},"components/WeatherListComponent.html":{}}}],["angular/material/toolbar",{"_index":204,"title":{},"body":{"modules/MaterialModule.html":{}}}],["angular/platform",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":478,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"index.html":{}}}],["app.component.html",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app/app.compon",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["app/app.reduc",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["app/base/base.compon",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["app/db",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["app/weather/shared/store/weather.act",{"_index":330,"title":{},"body":{"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{}}}],["app/weather/shared/store/weather.effect",{"_index":416,"title":{},"body":{"modules/WeatherModule.html":{}}}],["app/weather/shared/store/weather.reduc",{"_index":387,"title":{},"body":{"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{}}}],["app/weather/shared/weather.model",{"_index":155,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{}}}],["app/weather/shared/weather.servic",{"_index":331,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["app/weather/weath",{"_index":251,"title":{},"body":{"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{}}}],["app/weather/weather.modul",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":52,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["ar",{"_index":580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":346,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["artifact",{"_index":526,"title":{},"body":{"index.html":{}}}],["au",{"_index":611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoincr",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["automat",{"_index":305,"title":{},"body":{"injectables/WeatherEffects.html":{},"index.html":{}}}],["avail",{"_index":550,"title":{},"body":{"modules.html":{}}}],["bad",{"_index":297,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["bar",{"_index":199,"title":{},"body":{"modules/MaterialModule.html":{},"components/WeatherListComponent.html":{}}}],["base",{"_index":92,"title":{},"body":{"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["base'},{'nam",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["base.component.html",{"_index":94,"title":{},"body":{"components/BaseComponent.html":{}}}],["base.component.scss",{"_index":93,"title":{},"body":{"components/BaseComponent.html":{}}}],["basecompon",{"_index":40,"title":{"components/BaseComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"coverage.html":{},"overview.html":{}}}],["bootstrap",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["br",{"_index":587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":400,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["brows",{"_index":548,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/anim",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodul",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodul",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["bueno",{"_index":578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":525,"title":{},"body":{"index.html":{}}}],["c",{"_index":259,"title":{},"body":{"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{}}}],["cairn",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":238,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card'},{'nam",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["card.compon",{"_index":418,"title":{},"body":{"modules/WeatherModule.html":{}}}],["card.component.html",{"_index":240,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card.component.scss",{"_index":239,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card.component.t",{"_index":235,"title":{},"body":{"components/WeatherCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:14",{"_index":247,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card.component.ts:15",{"_index":246,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card.component.ts:19",{"_index":248,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["card/weath",{"_index":234,"title":{},"body":{"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{}}}],["case",{"_index":397,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["catcherror",{"_index":325,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["catcherror(err",{"_index":311,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["chang",{"_index":521,"title":{},"body":{"index.html":{}}}],["changedetect",{"_index":236,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["changedetectionstrategi",{"_index":250,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":237,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["check",{"_index":544,"title":{},"body":{"index.html":{}}}],["citi",{"_index":102,"title":{},"body":{"components/BaseComponent.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"miscellaneous/enumerations.html":{}}}],["citydata",{"_index":336,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["citydata.histori",{"_index":343,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["cityid",{"_index":96,"title":{},"body":{"components/BaseComponent.html":{},"components/WeatherListComponent.html":{},"miscellaneous/variables.html":{}}}],["cl",{"_index":576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":31,"title":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":509,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":111,"title":{"interfaces/Clouds.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodul",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":205,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":207,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_import",{"_index":206,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_weathermodul",{"_index":408,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_declar",{"_index":409,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_export",{"_index":411,"title":{},"body":{"modules/WeatherModule.html":{},"overview.html":{}}}],["cluster_weathermodule_import",{"_index":410,"title":{},"body":{"modules/WeatherModule.html":{}}}],["cnt",{"_index":117,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{}}}],["cod",{"_index":127,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["code",{"_index":120,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"interfaces/Wind.html":{},"index.html":{}}}],["commonmodul",{"_index":209,"title":{},"body":{"modules/SharedModule.html":{}}}],["compat",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["config",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('act",{"_index":228,"title":{},"body":{"interfaces/State.html":{}}}],["console.log('st",{"_index":227,"title":{},"body":{"interfaces/State.html":{}}}],["const",{"_index":230,"title":{},"body":{"interfaces/State.html":{},"injectables/WeatherEffects.html":{}}}],["constructor",{"_index":148,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(@inject(mat_bottom_sheet_data",{"_index":355,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["constructor(act",{"_index":268,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["constructor(data",{"_index":350,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["constructor(http",{"_index":424,"title":{},"body":{"injectables/WeatherService.html":{}}}],["constructor(payload",{"_index":149,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{}}}],["constructor(priv",{"_index":254,"title":{},"body":{"components/WeatherCardComponent.html":{},"injectables/WeatherService.html":{}}}],["constructor(publ",{"_index":165,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}}}],["constructor(sheet",{"_index":244,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["constructor(stor",{"_index":372,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["context",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coord",{"_index":121,"title":{"interfaces/Coord.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["countri",{"_index":139,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["coverag",{"_index":436,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":345,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["css",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["data",{"_index":103,"title":{},"body":{"components/BaseComponent.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"miscellaneous/enumerations.html":{}}}],["data.foreach(item",{"_index":335,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["data.list",{"_index":435,"title":{},"body":{"injectables/WeatherService.html":{}}}],["data?.main.humid",{"_index":261,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["data?.main.temp",{"_index":258,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["data?.nam",{"_index":257,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["data[0]?.nam",{"_index":356,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["databas",{"_index":272,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["date",{"_index":357,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["date:'dd/mm/yyyi",{"_index":359,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["date:\\'dd/mm/yyyi",{"_index":361,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["db",{"_index":271,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["dbmodul",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["dbmodule.providedb(schema",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["dbschema",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declar",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["decor",{"_index":314,"title":{},"body":{"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{}}}],["default",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":320,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["defin",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{}}}],["deg",{"_index":138,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["depend",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":130,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":517,"title":{},"body":{"index.html":{}}}],["develop",{"_index":512,"title":{},"body":{"index.html":{}}}],["direct",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":524,"title":{},"body":{"index.html":{}}}],["directori",{"_index":528,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":332,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["dist",{"_index":527,"title":{},"body":{"index.html":{}}}],["document",{"_index":437,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["done",{"_index":304,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["dt",{"_index":125,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["dynam",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":538,"title":{},"body":{"index.html":{}}}],["effect",{"_index":296,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["effectsmodul",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["effectsmodule.forfeature([weathereffect",{"_index":421,"title":{},"body":{"modules/WeatherModule.html":{}}}],["effectsmodule.forroot",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["end",{"_index":537,"title":{},"body":{"index.html":{}}}],["entrycompon",{"_index":413,"title":{},"body":{"modules/WeatherModule.html":{}}}],["enum",{"_index":156,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}}}],["enumer",{"_index":493,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environ",{"_index":108,"title":{},"body":{"components/BaseComponent.html":{},"interfaces/State.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.cityid",{"_index":98,"title":{},"body":{"components/BaseComponent.html":{}}}],["environment.product",{"_index":231,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["environment.weather_api_key",{"_index":433,"title":{},"body":{"injectables/WeatherService.html":{}}}],["environment.weather_api}/group?id=${ids}&units=metric&appid",{"_index":432,"title":{},"body":{"injectables/WeatherService.html":{}}}],["environments/environ",{"_index":109,"title":{},"body":{"components/BaseComponent.html":{},"interfaces/State.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{}}}],["err.error.cod",{"_index":312,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["err.error.messag",{"_index":313,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["error",{"_index":160,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["execut",{"_index":534,"title":{},"body":{"index.html":{}}}],["exist",{"_index":341,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["export",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"overview.html":{}}}],["fals",{"_index":333,"title":{},"body":{"injectables/WeatherEffects.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":106,"title":{},"body":{"components/BaseComponent.html":{},"injectables/WeatherEffects.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":530,"title":{},"body":{"index.html":{}}}],["freez",{"_index":219,"title":{},"body":{"interfaces/State.html":{},"dependencies.html":{}}}],["function",{"_index":223,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["function(st",{"_index":226,"title":{},"body":{"interfaces/State.html":{}}}],["further",{"_index":540,"title":{},"body":{"index.html":{}}}],["gener",{"_index":507,"title":{},"body":{"index.html":{}}}],["get",{"_index":500,"title":{"index.html":{}},"body":{}}],["getcitiesdata",{"_index":423,"title":{},"body":{"injectables/WeatherService.html":{}}}],["getcitiesdata(id",{"_index":428,"title":{},"body":{"injectables/WeatherService.html":{}}}],["go",{"_index":543,"title":{},"body":{"index.html":{}}}],["graph",{"_index":549,"title":{},"body":{"modules.html":{}}}],["hack",{"_index":298,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["help",{"_index":541,"title":{},"body":{"index.html":{}}}],["here",{"_index":393,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["histori",{"_index":114,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"interfaces/Wind.html":{},"miscellaneous/enumerations.html":{}}}],["history'},{'nam",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["history.compon",{"_index":253,"title":{},"body":{"components/WeatherCardComponent.html":{},"modules/WeatherModule.html":{}}}],["history.component.html",{"_index":349,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["history.component.scss",{"_index":348,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["history.component.t",{"_index":347,"title":{},"body":{"components/WeatherHistoryComponent.html":{},"coverage.html":{}}}],["history.component.ts:10",{"_index":352,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["history.component.ts:9",{"_index":351,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["history/weath",{"_index":252,"title":{},"body":{"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{}}}],["hit",{"_index":302,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["html",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["http",{"_index":427,"title":{},"body":{"injectables/WeatherService.html":{}}}],["http://localhost:3000",{"_index":569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":519,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":425,"title":{},"body":{"injectables/WeatherService.html":{}}}],["httpclientmodul",{"_index":414,"title":{},"body":{"modules/WeatherModule.html":{}}}],["https://api.openweathermap.org/data/2.5",{"_index":571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hum",{"_index":260,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["humid",{"_index":134,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":131,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":100,"title":{},"body":{"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["ideal",{"_index":300,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["identifi",{"_index":438,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":144,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"components/WeatherListComponent.html":{}}}],["import",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{}}}],["index",{"_index":17,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexeddb",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{}}}],["initi",{"_index":593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialst",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":262,"title":{"injectables/WeatherEffects.html":{},"injectables/WeatherService.html":{}},"body":{"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"injectables/WeatherService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":243,"title":{},"body":{"components/WeatherCardComponent.html":{},"components/WeatherListComponent.html":{}}}],["interceptor",{"_index":504,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":110,"title":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"coverage.html":{},"overview.html":{}}}],["interv",{"_index":368,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["interval(environment.refreshtimeout",{"_index":383,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["it.id",{"_index":338,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["item",{"_index":344,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["item.dt",{"_index":358,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["item.id",{"_index":339,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["item.main.temp",{"_index":360,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["js",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":536,"title":{},"body":{"index.html":{}}}],["know",{"_index":299,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["lat",{"_index":129,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["layoutmodul",{"_index":182,"title":{},"body":{"modules/MaterialModule.html":{}}}],["legend",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"modules/SharedModule.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["lima",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":222,"title":{},"body":{"interfaces/State.html":{}}}],["list",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"interfaces/Wind.html":{}}}],["list.compon",{"_index":419,"title":{},"body":{"modules/WeatherModule.html":{}}}],["list.component.html",{"_index":367,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list.component.scss",{"_index":366,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list.component.t",{"_index":363,"title":{},"body":{"components/WeatherListComponent.html":{},"coverage.html":{}}}],["list.component.ts:17",{"_index":376,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list.component.ts:18",{"_index":382,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list.component.ts:19",{"_index":384,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list.component.ts:20",{"_index":375,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list.component.ts:27",{"_index":381,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list.component.ts:42",{"_index":379,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list.component.ts:59",{"_index":380,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["list/weath",{"_index":362,"title":{},"body":{"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{}}}],["liter",{"_index":378,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["load",{"_index":142,"title":{"classes/Load.html":{}},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loaderror",{"_index":159,"title":{"classes/LoadError.html":{}},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadhistori",{"_index":161,"title":{"classes/LoadHistory.html":{}},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadhistoryerror",{"_index":164,"title":{"classes/LoadHistoryError.html":{}},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadhistorysuccess",{"_index":162,"title":{"classes/LoadHistorySuccess.html":{}},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["loadhistorysuccess(data",{"_index":318,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["loadsuccess",{"_index":158,"title":{"classes/LoadSuccess.html":{}},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["logger",{"_index":232,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["logger(reduc",{"_index":224,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/functions.html":{}}}],["lon",{"_index":128,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["main",{"_index":122,"title":{"interfaces/Main.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["make",{"_index":295,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["manag",{"_index":277,"title":{},"body":{"injectables/WeatherEffects.html":{},"index.html":{}}}],["managest",{"_index":369,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["managestate(st",{"_index":377,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["map",{"_index":326,"title":{},"body":{"injectables/WeatherEffects.html":{},"injectables/WeatherService.html":{}}}],["map(_",{"_index":310,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["map(act",{"_index":282,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["map(data",{"_index":317,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["mark",{"_index":104,"title":{},"body":{"components/BaseComponent.html":{}}}],["mat_bottom_sheet_data",{"_index":353,"title":{},"body":{"components/WeatherHistoryComponent.html":{}}}],["matbottomsheet",{"_index":245,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["matbottomsheetmodul",{"_index":184,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":187,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":189,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["materialmodul",{"_index":180,"title":{"modules/MaterialModule.html":{}},"body":{"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["maticonmodul",{"_index":191,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":193,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":200,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":195,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbar",{"_index":374,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["matsnackbarmodul",{"_index":197,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":203,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mergemap",{"_index":327,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["mergemap(id",{"_index":284,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["messag",{"_index":119,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["metareduc",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":241,"title":{},"body":{"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{}}}],["minut",{"_index":591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":492,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":278,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["modul",{"_index":51,"title":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":542,"title":{},"body":{"index.html":{}}}],["name",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":518,"title":{},"body":{"index.html":{}}}],["need",{"_index":293,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["new",{"_index":301,"title":{},"body":{"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":221,"title":{},"body":{"interfaces/State.html":{}}}],["ng",{"_index":515,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{}}}],["ngondestroy",{"_index":370,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["ngoninit",{"_index":371,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["ngrx",{"_index":217,"title":{},"body":{"interfaces/State.html":{},"dependencies.html":{}}}],["ngrx/db",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherEffects.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["ngrx/effect",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherEffects.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["ngrx/entiti",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/State.html":{},"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"dependencies.html":{}}}],["note",{"_index":502,"title":{},"body":{"index.html":{}}}],["number",{"_index":97,"title":{},"body":{"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"components/WeatherListComponent.html":{},"interfaces/Wind.html":{}}}],["object",{"_index":567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":279,"title":{},"body":{"injectables/WeatherEffects.html":{},"injectables/WeatherService.html":{}}}],["oftyp",{"_index":323,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["oftype(weatheractiontypes.load",{"_index":281,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["oftype(weatheractiontypes.loadhistori",{"_index":316,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["ondestroy",{"_index":365,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["oninit",{"_index":364,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["opendb",{"_index":265,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["openhistori",{"_index":242,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["option",{"_index":152,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":551,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":468,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":334,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["paramet",{"_index":151,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{},"miscellaneous/functions.html":{}}}],["paulo",{"_index":586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["payload",{"_index":147,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"components/WeatherListComponent.html":{}}}],["pe",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe(map(data",{"_index":434,"title":{},"body":{"injectables/WeatherService.html":{}}}],["pressur",{"_index":133,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["primarykey",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privat",{"_index":266,"title":{},"body":{"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{}}}],["process",{"_index":289,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["processdata",{"_index":267,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["processdata(data",{"_index":274,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["processeddata",{"_index":291,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["processeddata).subscribe(_",{"_index":307,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["prod",{"_index":529,"title":{},"body":{"index.html":{}}}],["product",{"_index":531,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":506,"title":{},"body":{"index.html":{}}}],["properti",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"interfaces/Wind.html":{}}}],["protractor",{"_index":539,"title":{},"body":{"index.html":{}}}],["provid",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["providedin",{"_index":430,"title":{},"body":{"injectables/WeatherService.html":{}}}],["public",{"_index":146,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"components/WeatherHistoryComponent.html":{}}}],["querydata",{"_index":275,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["querydata.find(it",{"_index":337,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["readm",{"_index":545,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":95,"title":{},"body":{"components/BaseComponent.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"components/WeatherCardComponent.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{}}}],["reduc",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["reducer(st",{"_index":229,"title":{},"body":{"interfaces/State.html":{}}}],["refresh",{"_index":392,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["refreshtimeout",{"_index":588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reload",{"_index":520,"title":{},"body":{"index.html":{}}}],["remov",{"_index":592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requir",{"_index":105,"title":{},"body":{"components/BaseComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}],["result",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retriev",{"_index":101,"title":{},"body":{"components/BaseComponent.html":{}}}],["return",{"_index":225,"title":{},"body":{"interfaces/State.html":{},"components/WeatherCardComponent.html":{},"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherService.html":{}}}],["root'},{'nam",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["run",{"_index":514,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":324,"title":{},"body":{"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":329,"title":{},"body":{"injectables/WeatherEffects.html":{},"injectables/WeatherService.html":{}}}],["santiago",{"_index":575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scaffold",{"_index":522,"title":{},"body":{"index.html":{}}}],["scatter",{"_index":597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":385,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["selector",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["serv",{"_index":516,"title":{},"body":{"index.html":{}}}],["server",{"_index":513,"title":{},"body":{"index.html":{}}}],["servic",{"_index":269,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["shared/material/material.modul",{"_index":211,"title":{},"body":{"modules/SharedModule.html":{}}}],["shared/shared.modul",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["sharedmodul",{"_index":61,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["sheet",{"_index":186,"title":{},"body":{"modules/MaterialModule.html":{},"components/WeatherCardComponent.html":{}}}],["simpl",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["snackbar",{"_index":373,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"modules/MaterialModule.html":{},"modules/SharedModule.html":{},"interfaces/State.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"index.html":{}}}],["spec\\.t",{"_index":566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speed",{"_index":137,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":202,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/.../app.reducers.t",{"_index":495,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../db.t",{"_index":563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.actions.t",{"_index":494,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../weather.mock.t",{"_index":562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.reducers.t",{"_index":496,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.reducers.t",{"_index":213,"title":{},"body":{"interfaces/State.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/base/base.component.t",{"_index":91,"title":{},"body":{"components/BaseComponent.html":{},"coverage.html":{}}}],["src/app/base/base.component.ts:14",{"_index":99,"title":{},"body":{"components/BaseComponent.html":{}}}],["src/app/db.t",{"_index":446,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/material/material.module.t",{"_index":181,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/shared/shared.module.t",{"_index":208,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/weather/shared/store/weather.actions.t",{"_index":143,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:18",{"_index":150,"title":{},"body":{"classes/Load.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:20",{"_index":153,"title":{},"body":{"classes/Load.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:24",{"_index":179,"title":{},"body":{"classes/LoadSuccess.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:28",{"_index":172,"title":{},"body":{"classes/LoadError.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:30",{"_index":173,"title":{},"body":{"classes/LoadError.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:34",{"_index":174,"title":{},"body":{"classes/LoadHistory.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:38",{"_index":177,"title":{},"body":{"classes/LoadHistorySuccess.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:40",{"_index":178,"title":{},"body":{"classes/LoadHistorySuccess.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:44",{"_index":175,"title":{},"body":{"classes/LoadHistoryError.html":{}}}],["src/app/weather/shared/store/weather.actions.ts:46",{"_index":176,"title":{},"body":{"classes/LoadHistoryError.html":{}}}],["src/app/weather/shared/store/weather.effects.t",{"_index":264,"title":{},"body":{"injectables/WeatherEffects.html":{},"coverage.html":{}}}],["src/app/weather/shared/store/weather.effects.ts:26",{"_index":322,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["src/app/weather/shared/store/weather.effects.ts:31",{"_index":315,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["src/app/weather/shared/store/weather.effects.ts:70",{"_index":319,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["src/app/weather/shared/store/weather.effects.ts:87",{"_index":273,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["src/app/weather/shared/store/weather.effects.ts:99",{"_index":276,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["src/app/weather/shared/store/weather.reducers.t",{"_index":452,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/shared/weather.mock.t",{"_index":454,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/weather/shared/weather.model.t",{"_index":112,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["src/app/weather/shared/weather.service.t",{"_index":422,"title":{},"body":{"injectables/WeatherService.html":{},"coverage.html":{}}}],["src/app/weather/shared/weather.service.ts:15",{"_index":426,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/shared/weather.service.ts:18",{"_index":429,"title":{},"body":{"injectables/WeatherService.html":{}}}],["src/app/weather/weath",{"_index":233,"title":{},"body":{"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.module.t",{"_index":412,"title":{},"body":{"modules/WeatherModule.html":{}}}],["src/environments/environment.prod.t",{"_index":462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":501,"title":{"index.html":{}},"body":{}}],["state",{"_index":212,"title":{"interfaces/State.html":{}},"body":{"interfaces/State.html":{},"components/WeatherListComponent.html":{},"coverage.html":{}}}],["state.payload",{"_index":403,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["state.typ",{"_index":396,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["statement",{"_index":439,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":107,"title":{},"body":{"components/BaseComponent.html":{}}}],["station",{"_index":599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":218,"title":{},"body":{"interfaces/State.html":{},"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["storefreez",{"_index":216,"title":{},"body":{"interfaces/State.html":{},"miscellaneous/variables.html":{}}}],["storemodul",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{}}}],["storemodule.forfeature('weath",{"_index":420,"title":{},"body":{"modules/WeatherModule.html":{}}}],["storemodule.forroot(reduc",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{}}}],["styleurl",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["subscrib",{"_index":294,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["subscript",{"_index":303,"title":{},"body":{"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{}}}],["success",{"_index":163,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"miscellaneous/enumerations.html":{}}}],["sunris",{"_index":140,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["sunset",{"_index":141,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":546,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":547,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":395,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["switchmap",{"_index":328,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["switchmap(_",{"_index":308,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["switchmap(data",{"_index":286,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["switchmap(querydata",{"_index":290,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["sy",{"_index":126,"title":{"interfaces/Sys.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["são",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabl",{"_index":467,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":466,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":132,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"components/WeatherHistoryComponent.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["temp_max",{"_index":136,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["temp_min",{"_index":135,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["templateurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["test",{"_index":533,"title":{},"body":{"index.html":{}}}],["this.actions$.pip",{"_index":280,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["this.data",{"_index":402,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["this.db.insert('weath",{"_index":306,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["this.db.open('weath",{"_index":321,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["this.db.query('weath",{"_index":309,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["this.db.query('weather').pip",{"_index":287,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["this.histori",{"_index":256,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["this.http",{"_index":431,"title":{},"body":{"injectables/WeatherService.html":{}}}],["this.interval$.subscribe(_",{"_index":394,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["this.processdata(data",{"_index":292,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["this.service.getcitiesdata(ids).pip",{"_index":285,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["this.sheet.open(weatherhistorycompon",{"_index":255,"title":{},"body":{"components/WeatherCardComponent.html":{}}}],["this.snackbar.open(state.payload.messag",{"_index":406,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["this.store.dispatch(new",{"_index":388,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["this.store.pipe(select('weather')).subscribe(this.managestate.bind(thi",{"_index":391,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["this.subscription.add",{"_index":390,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["this.subscription.unsubscrib",{"_index":407,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["titl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["toarray",{"_index":288,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["todo",{"_index":570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["true",{"_index":565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tslint:dis",{"_index":220,"title":{},"body":{"interfaces/State.html":{}}}],["type",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":557,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefin",{"_index":497,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":532,"title":{},"body":{"index.html":{}}}],["updat",{"_index":342,"title":{},"body":{"injectables/WeatherEffects.html":{}}}],["us",{"_index":523,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["valu",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{}}}],["variabl",{"_index":443,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":510,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":535,"title":{},"body":{"index.html":{}}}],["visibl",{"_index":123,"title":{},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":249,"title":{},"body":{"components/WeatherCardComponent.html":{},"components/WeatherListComponent.html":{}}}],["weather",{"_index":25,"title":{"interfaces/Weather.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["weather_api",{"_index":568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weather_api_key",{"_index":572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weather_app",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weatheract",{"_index":386,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["weatheractions.load(this.cityid",{"_index":389,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["weatheractions.loadhistori",{"_index":399,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["weatheractions.weatheractiontypes.loaderror",{"_index":404,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["weatheractions.weatheractiontypes.loadhistoryerror",{"_index":405,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["weatheractions.weatheractiontypes.loadhistorysuccess",{"_index":401,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["weatheractions.weatheractiontypes.loadsuccess",{"_index":398,"title":{},"body":{"components/WeatherListComponent.html":{}}}],["weatheractionsunion",{"_index":171,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"miscellaneous/typealiases.html":{}}}],["weatheractiontyp",{"_index":157,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"injectables/WeatherEffects.html":{},"miscellaneous/enumerations.html":{}}}],["weatheractiontypes.load",{"_index":154,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}}}],["weatheractiontypes.loaderror",{"_index":167,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}}}],["weatheractiontypes.loadhistori",{"_index":168,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}}}],["weatheractiontypes.loadhistoryerror",{"_index":170,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}}}],["weatheractiontypes.loadhistorysuccess",{"_index":169,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}}}],["weatheractiontypes.loadsuccess",{"_index":166,"title":{},"body":{"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{}}}],["weatherapp",{"_index":505,"title":{},"body":{"index.html":{}}}],["weathercardcompon",{"_index":42,"title":{"components/WeatherCardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{}}}],["weatherdata",{"_index":115,"title":{"interfaces/WeatherData.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"components/WeatherCardComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["weatherdatabulkrespons",{"_index":116,"title":{"interfaces/WeatherDataBulkResponse.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherService.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["weatherdataerrorrespons",{"_index":118,"title":{"interfaces/WeatherDataErrorResponse.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"classes/Load.html":{},"classes/LoadError.html":{},"classes/LoadHistory.html":{},"classes/LoadHistoryError.html":{},"classes/LoadHistorySuccess.html":{},"classes/LoadSuccess.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["weatherdatahistori",{"_index":113,"title":{"interfaces/WeatherDataHistory.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"injectables/WeatherEffects.html":{},"components/WeatherListComponent.html":{},"interfaces/Wind.html":{},"coverage.html":{}}}],["weathereffect",{"_index":263,"title":{"injectables/WeatherEffects.html":{}},"body":{"injectables/WeatherEffects.html":{},"modules/WeatherModule.html":{},"coverage.html":{}}}],["weatherhistorycompon",{"_index":44,"title":{"components/WeatherHistoryComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{}}}],["weatherlistcompon",{"_index":46,"title":{"components/WeatherListComponent.html":{}},"body":{"components/AppComponent.html":{},"components/BaseComponent.html":{},"components/WeatherCardComponent.html":{},"components/WeatherHistoryComponent.html":{},"components/WeatherListComponent.html":{},"modules/WeatherModule.html":{},"coverage.html":{},"overview.html":{}}}],["weathermodul",{"_index":62,"title":{"modules/WeatherModule.html":{}},"body":{"modules/AppModule.html":{},"modules/WeatherModule.html":{},"modules.html":{},"overview.html":{}}}],["weatherreduc",{"_index":417,"title":{},"body":{"modules/WeatherModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["weatherreducer(_st",{"_index":498,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weatherservic",{"_index":270,"title":{"injectables/WeatherService.html":{}},"body":{"injectables/WeatherEffects.html":{},"injectables/WeatherService.html":{},"coverage.html":{}}}],["wind",{"_index":124,"title":{"interfaces/Wind.html":{}},"body":{"interfaces/Clouds.html":{},"interfaces/Coord.html":{},"interfaces/Main.html":{},"interfaces/Sys.html":{},"interfaces/Weather.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherDataBulkResponse.html":{},"interfaces/WeatherDataErrorResponse.html":{},"interfaces/WeatherDataHistory.html":{},"interfaces/Wind.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["zone.j",{"_index":490,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/WeatherModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Weather App'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'Weather App';\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'WeatherCardComponent', 'selector': 'app-weather-card'},{'name': 'WeatherHistoryComponent', 'selector': 'app-weather-history'},{'name': 'WeatherListComponent', 'selector': 'app-weather-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBaseComponent\n\nBaseComponent\n\nAppModule -->\n\nBaseComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                BaseComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                            \n                                    WeatherModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DBModule } from '@ngrx/db';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { WeatherModule } from '@app/weather/weather.module';\nimport { SharedModule } from '@shared/shared.module';\n\nimport { BaseComponent } from '@app/base/base.component';\nimport { schema } from '@app/db';\nimport { AppComponent } from '@app/app.component';\nimport { reducers, metaReducers } from '@app/app.reducers';\n\n@NgModule({\n  declarations: [AppComponent, BaseComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    StoreModule.forRoot(reducers, { metaReducers }),\n    EffectsModule.forRoot([]),\n    WeatherModule,\n    DBModule.provideDB(schema),\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BaseComponent.html":{"url":"components/BaseComponent.html","title":"component - BaseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BaseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/base/base.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-base\n            \n\n            \n                styleUrls\n                base.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./base.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                cityIds\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            cityIds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cityIds:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                    \n                        \n                            Default value : environment.cityIds\n                        \n                    \n                        \n                            \n                                    Defined in src/app/base/base.component.ts:14\n                            \n                        \n\n                \n                    \n                        IDs to retrieve cities data. Marked as readonly just because this app\nrequirements is to fetch some static cities.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { environment } from '@environments/environment';\n\n@Component({\n  selector: 'app-base',\n  templateUrl: './base.component.html',\n  styleUrls: ['./base.component.scss'],\n})\nexport class BaseComponent {\n  /**\n   * IDs to retrieve cities data. Marked as readonly just because this app\n   * requirements is to fetch some static cities.\n   */\n  readonly cityIds: number[] = environment.cityIds;\n}\n\n    \n\n    \n        \n  \n    \n      Weather App\n    \n    \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Weather App              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'WeatherCardComponent', 'selector': 'app-weather-card'},{'name': 'WeatherHistoryComponent', 'selector': 'app-weather-history'},{'name': 'WeatherListComponent', 'selector': 'app-weather-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BaseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Clouds.html":{"url":"interfaces/Clouds.html","title":"interface - Clouds","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Clouds\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        all\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        all\n                                    \n                                \n                                \n                                    \n                                        all:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Coord.html":{"url":"interfaces/Coord.html","title":"interface - Coord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Coord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        lat\n                                \n                                \n                                        lon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        lat\n                                    \n                                \n                                \n                                    \n                                        lat:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lon\n                                    \n                                \n                                \n                                    \n                                        lon:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Load.html":{"url":"classes/Load.html","title":"class - Load","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Load\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/store/weather.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: number[])\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/shared/store/weather.actions.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    number[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     number[]\n\n                    \n                \n                    \n                        \n                            Type :     number[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherActionTypes.Load\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  WeatherData,\n  WeatherDataErrorResponse,\n} from '@app/weather/shared/weather.model';\n\nexport enum WeatherActionTypes {\n  Load = '[Weather] Load Weather Data',\n  LoadSuccess = '[Weather] Weather Data Loaded',\n  LoadError = '[Weather] Weather Data Error',\n  LoadHistory = '[Weather] Load City Weather History',\n  LoadHistorySuccess = '[Weather] Load City Weather History Success',\n  LoadHistoryError = '[Weather] Load City Weather History Error',\n}\n\nexport class Load implements Action {\n  readonly type = WeatherActionTypes.Load;\n\n  constructor(public payload: number[]) {}\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = WeatherActionTypes.LoadSuccess;\n}\n\nexport class LoadError implements Action {\n  readonly type = WeatherActionTypes.LoadError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport class LoadHistory implements Action {\n  readonly type = WeatherActionTypes.LoadHistory;\n}\n\nexport class LoadHistorySuccess implements Action {\n  readonly type = WeatherActionTypes.LoadHistorySuccess;\n\n  constructor(public payload: WeatherData[]) {}\n}\n\nexport class LoadHistoryError implements Action {\n  readonly type = WeatherActionTypes.LoadHistoryError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport type WeatherActionsUnion =\n  | Load\n  | LoadSuccess\n  | LoadError\n  | LoadHistory\n  | LoadHistorySuccess\n  | LoadHistoryError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadError.html":{"url":"classes/LoadError.html","title":"class - LoadError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/store/weather.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: WeatherDataErrorResponse)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/shared/store/weather.actions.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    WeatherDataErrorResponse\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     WeatherDataErrorResponse\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDataErrorResponse\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherActionTypes.LoadError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  WeatherData,\n  WeatherDataErrorResponse,\n} from '@app/weather/shared/weather.model';\n\nexport enum WeatherActionTypes {\n  Load = '[Weather] Load Weather Data',\n  LoadSuccess = '[Weather] Weather Data Loaded',\n  LoadError = '[Weather] Weather Data Error',\n  LoadHistory = '[Weather] Load City Weather History',\n  LoadHistorySuccess = '[Weather] Load City Weather History Success',\n  LoadHistoryError = '[Weather] Load City Weather History Error',\n}\n\nexport class Load implements Action {\n  readonly type = WeatherActionTypes.Load;\n\n  constructor(public payload: number[]) {}\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = WeatherActionTypes.LoadSuccess;\n}\n\nexport class LoadError implements Action {\n  readonly type = WeatherActionTypes.LoadError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport class LoadHistory implements Action {\n  readonly type = WeatherActionTypes.LoadHistory;\n}\n\nexport class LoadHistorySuccess implements Action {\n  readonly type = WeatherActionTypes.LoadHistorySuccess;\n\n  constructor(public payload: WeatherData[]) {}\n}\n\nexport class LoadHistoryError implements Action {\n  readonly type = WeatherActionTypes.LoadHistoryError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport type WeatherActionsUnion =\n  | Load\n  | LoadSuccess\n  | LoadError\n  | LoadHistory\n  | LoadHistorySuccess\n  | LoadHistoryError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistory.html":{"url":"classes/LoadHistory.html","title":"class - LoadHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/store/weather.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherActionTypes.LoadHistory\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  WeatherData,\n  WeatherDataErrorResponse,\n} from '@app/weather/shared/weather.model';\n\nexport enum WeatherActionTypes {\n  Load = '[Weather] Load Weather Data',\n  LoadSuccess = '[Weather] Weather Data Loaded',\n  LoadError = '[Weather] Weather Data Error',\n  LoadHistory = '[Weather] Load City Weather History',\n  LoadHistorySuccess = '[Weather] Load City Weather History Success',\n  LoadHistoryError = '[Weather] Load City Weather History Error',\n}\n\nexport class Load implements Action {\n  readonly type = WeatherActionTypes.Load;\n\n  constructor(public payload: number[]) {}\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = WeatherActionTypes.LoadSuccess;\n}\n\nexport class LoadError implements Action {\n  readonly type = WeatherActionTypes.LoadError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport class LoadHistory implements Action {\n  readonly type = WeatherActionTypes.LoadHistory;\n}\n\nexport class LoadHistorySuccess implements Action {\n  readonly type = WeatherActionTypes.LoadHistorySuccess;\n\n  constructor(public payload: WeatherData[]) {}\n}\n\nexport class LoadHistoryError implements Action {\n  readonly type = WeatherActionTypes.LoadHistoryError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport type WeatherActionsUnion =\n  | Load\n  | LoadSuccess\n  | LoadError\n  | LoadHistory\n  | LoadHistorySuccess\n  | LoadHistoryError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistoryError.html":{"url":"classes/LoadHistoryError.html","title":"class - LoadHistoryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistoryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/store/weather.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: WeatherDataErrorResponse)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/shared/store/weather.actions.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    WeatherDataErrorResponse\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     WeatherDataErrorResponse\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDataErrorResponse\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherActionTypes.LoadHistoryError\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:44\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  WeatherData,\n  WeatherDataErrorResponse,\n} from '@app/weather/shared/weather.model';\n\nexport enum WeatherActionTypes {\n  Load = '[Weather] Load Weather Data',\n  LoadSuccess = '[Weather] Weather Data Loaded',\n  LoadError = '[Weather] Weather Data Error',\n  LoadHistory = '[Weather] Load City Weather History',\n  LoadHistorySuccess = '[Weather] Load City Weather History Success',\n  LoadHistoryError = '[Weather] Load City Weather History Error',\n}\n\nexport class Load implements Action {\n  readonly type = WeatherActionTypes.Load;\n\n  constructor(public payload: number[]) {}\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = WeatherActionTypes.LoadSuccess;\n}\n\nexport class LoadError implements Action {\n  readonly type = WeatherActionTypes.LoadError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport class LoadHistory implements Action {\n  readonly type = WeatherActionTypes.LoadHistory;\n}\n\nexport class LoadHistorySuccess implements Action {\n  readonly type = WeatherActionTypes.LoadHistorySuccess;\n\n  constructor(public payload: WeatherData[]) {}\n}\n\nexport class LoadHistoryError implements Action {\n  readonly type = WeatherActionTypes.LoadHistoryError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport type WeatherActionsUnion =\n  | Load\n  | LoadSuccess\n  | LoadError\n  | LoadHistory\n  | LoadHistorySuccess\n  | LoadHistoryError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadHistorySuccess.html":{"url":"classes/LoadHistorySuccess.html","title":"class - LoadHistorySuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadHistorySuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/store/weather.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                payload\n                            \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(payload: WeatherData[])\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/shared/store/weather.actions.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        payload\n                                                  \n                                                        \n                                                                    WeatherData[]\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            payload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        payload:     WeatherData[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherActionTypes.LoadHistorySuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:38\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  WeatherData,\n  WeatherDataErrorResponse,\n} from '@app/weather/shared/weather.model';\n\nexport enum WeatherActionTypes {\n  Load = '[Weather] Load Weather Data',\n  LoadSuccess = '[Weather] Weather Data Loaded',\n  LoadError = '[Weather] Weather Data Error',\n  LoadHistory = '[Weather] Load City Weather History',\n  LoadHistorySuccess = '[Weather] Load City Weather History Success',\n  LoadHistoryError = '[Weather] Load City Weather History Error',\n}\n\nexport class Load implements Action {\n  readonly type = WeatherActionTypes.Load;\n\n  constructor(public payload: number[]) {}\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = WeatherActionTypes.LoadSuccess;\n}\n\nexport class LoadError implements Action {\n  readonly type = WeatherActionTypes.LoadError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport class LoadHistory implements Action {\n  readonly type = WeatherActionTypes.LoadHistory;\n}\n\nexport class LoadHistorySuccess implements Action {\n  readonly type = WeatherActionTypes.LoadHistorySuccess;\n\n  constructor(public payload: WeatherData[]) {}\n}\n\nexport class LoadHistoryError implements Action {\n  readonly type = WeatherActionTypes.LoadHistoryError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport type WeatherActionsUnion =\n  | Load\n  | LoadSuccess\n  | LoadError\n  | LoadHistory\n  | LoadHistorySuccess\n  | LoadHistoryError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadSuccess.html":{"url":"classes/LoadSuccess.html","title":"class - LoadSuccess","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadSuccess\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/store/weather.actions.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        Action\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     \n\n                    \n                \n                    \n                        \n                            Default value : WeatherActionTypes.LoadSuccess\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.actions.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Action } from '@ngrx/store';\n\nimport {\n  WeatherData,\n  WeatherDataErrorResponse,\n} from '@app/weather/shared/weather.model';\n\nexport enum WeatherActionTypes {\n  Load = '[Weather] Load Weather Data',\n  LoadSuccess = '[Weather] Weather Data Loaded',\n  LoadError = '[Weather] Weather Data Error',\n  LoadHistory = '[Weather] Load City Weather History',\n  LoadHistorySuccess = '[Weather] Load City Weather History Success',\n  LoadHistoryError = '[Weather] Load City Weather History Error',\n}\n\nexport class Load implements Action {\n  readonly type = WeatherActionTypes.Load;\n\n  constructor(public payload: number[]) {}\n}\n\nexport class LoadSuccess implements Action {\n  readonly type = WeatherActionTypes.LoadSuccess;\n}\n\nexport class LoadError implements Action {\n  readonly type = WeatherActionTypes.LoadError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport class LoadHistory implements Action {\n  readonly type = WeatherActionTypes.LoadHistory;\n}\n\nexport class LoadHistorySuccess implements Action {\n  readonly type = WeatherActionTypes.LoadHistorySuccess;\n\n  constructor(public payload: WeatherData[]) {}\n}\n\nexport class LoadHistoryError implements Action {\n  readonly type = WeatherActionTypes.LoadHistoryError;\n\n  constructor(public payload: WeatherDataErrorResponse) {}\n}\n\nexport type WeatherActionsUnion =\n  | Load\n  | LoadSuccess\n  | LoadError\n  | LoadHistory\n  | LoadHistorySuccess\n  | LoadHistoryError;\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Main.html":{"url":"interfaces/Main.html","title":"interface - Main","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Main\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        humidity\n                                \n                                \n                                        pressure\n                                \n                                \n                                        temp\n                                \n                                \n                                        temp_max\n                                \n                                \n                                        temp_min\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp\n                                    \n                                \n                                \n                                    \n                                        temp:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_max\n                                    \n                                \n                                \n                                    \n                                        temp_max:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temp_min\n                                    \n                                \n                                \n                                    \n                                        temp_min:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/material/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { LayoutModule } from '@angular/cdk/layout';\nimport { NgModule } from '@angular/core';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  imports: [\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatBottomSheetModule,\n  ],\n  exports: [\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatProgressSpinnerModule,\n    MatBottomSheetModule,\n  ],\n  declarations: [],\n})\nexport class MaterialModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nMaterialModule\n\nMaterialModule\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MaterialModule } from '@shared/material/material.module';\n\n@NgModule({\n  imports: [CommonModule, MaterialModule],\n  exports: [CommonModule, MaterialModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/State.html":{"url":"interfaces/State.html","title":"interface - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.reducers.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        import { ActionReducerMap, ActionReducer, MetaReducer } from '@ngrx/store';\nimport { environment } from '@environments/environment';\nimport { storeFreeze } from 'ngrx-store-freeze';\n\n// tslint:disable-next-line\nexport interface State {}\n\nexport function logger(reducer: ActionReducer): ActionReducer {\n  return function(state: State, action: any): State {\n    console.log('state', state);\n    console.log('action', action);\n\n    return reducer(state, action);\n  };\n}\n\nexport const reducers: ActionReducerMap = {};\n\nexport const metaReducers: MetaReducer[] = !environment.production\n  ? [logger, storeFreeze]\n  : [];\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Sys.html":{"url":"interfaces/Sys.html","title":"interface - Sys","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Sys\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        id\n                                \n                                \n                                        message\n                                \n                                \n                                        sunrise\n                                \n                                \n                                        sunset\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunrise\n                                    \n                                \n                                \n                                    \n                                        sunrise:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sunset\n                                    \n                                \n                                \n                                    \n                                        sunset:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Weather.html":{"url":"interfaces/Weather.html","title":"interface - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        description\n                                \n                                \n                                        icon\n                                \n                                \n                                        id\n                                \n                                \n                                        main\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherCardComponent.html":{"url":"components/WeatherCardComponent.html","title":"component - WeatherCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-card/weather-card.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-card\n            \n\n            \n                styleUrls\n                weather-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-card.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openHistory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                history\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sheet: MatBottomSheet)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-card/weather-card.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sheet\n                                                  \n                                                        \n                                                                    MatBottomSheet\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                    \n                            \n                            Type:    WeatherData\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-card/weather-card.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        history\n                    \n                    \n                            \n                            Type:    WeatherData[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-card/weather-card.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openHistory\n                            \n                            \n                        \n                    \n                \n                \n                    \nopenHistory()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-card/weather-card.component.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\n\nimport { WeatherData } from '@app/weather/shared/weather.model';\nimport { WeatherHistoryComponent } from '@app/weather/weather-history/weather-history.component';\n\n@Component({\n  selector: 'app-weather-card',\n  templateUrl: './weather-card.component.html',\n  styleUrls: ['./weather-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WeatherCardComponent {\n  @Input() data: WeatherData;\n  @Input() history: WeatherData[];\n\n  constructor(private readonly sheet: MatBottomSheet) {}\n\n  openHistory(): void {\n    this.sheet.open(WeatherHistoryComponent, {\n      data: this.history,\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          {{ data?.name }}\n        \n        \n      \n      \n        \n          TEMP\n          {{ data?.main.temp }}ºc\n        \n        \n          HUM\n          {{ data?.main.humidity }}%\n        \n      \n      \n        History\n      \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              {{ data?.name }}                                              TEMP          {{ data?.main.temp }}ºc                          HUM          {{ data?.main.humidity }}%                            History                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'WeatherCardComponent', 'selector': 'app-weather-card'},{'name': 'WeatherHistoryComponent', 'selector': 'app-weather-history'},{'name': 'WeatherListComponent', 'selector': 'app-weather-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherData.html":{"url":"interfaces/WeatherData.html","title":"interface - WeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        base\n                                \n                                \n                                        clouds\n                                \n                                \n                                        cod\n                                \n                                \n                                        coord\n                                \n                                \n                                        dt\n                                \n                                \n                                        id\n                                \n                                \n                                        main\n                                \n                                \n                                        name\n                                \n                                \n                                        sys\n                                \n                                \n                                        visibility\n                                \n                                \n                                        weather\n                                \n                                \n                                        wind\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base\n                                    \n                                \n                                \n                                    \n                                        base:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clouds\n                                    \n                                \n                                \n                                    \n                                        clouds:     Clouds\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Clouds\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cod\n                                    \n                                \n                                \n                                    \n                                        cod:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        coord\n                                    \n                                \n                                \n                                    \n                                        coord:     Coord\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Coord\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dt\n                                    \n                                \n                                \n                                    \n                                        dt:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        main\n                                    \n                                \n                                \n                                    \n                                        main:     Main\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Main\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sys\n                                    \n                                \n                                \n                                    \n                                        sys:     Sys\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Sys\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:     Weather[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Weather[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wind\n                                    \n                                \n                                \n                                    \n                                        wind:     Wind\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Wind\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherDataBulkResponse.html":{"url":"interfaces/WeatherDataBulkResponse.html","title":"interface - WeatherDataBulkResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherDataBulkResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cnt\n                                \n                                \n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cnt\n                                    \n                                \n                                \n                                    \n                                        cnt:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     WeatherData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WeatherData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherDataErrorResponse.html":{"url":"interfaces/WeatherDataErrorResponse.html","title":"interface - WeatherDataErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherDataErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        code\n                                \n                                \n                                        message\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                    \n                                \n                                \n                                    \n                                        code:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherDataHistory.html":{"url":"interfaces/WeatherDataHistory.html","title":"interface - WeatherDataHistory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherDataHistory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        history\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        history\n                                    \n                                \n                                \n                                    \n                                        history:     WeatherData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     WeatherData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherEffects.html":{"url":"injectables/WeatherEffects.html","title":"injectable - WeatherEffects","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/store/weather.effects.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                load$\n                            \n                            \n                                loadHistory$\n                            \n                            \n                                openDB$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                processData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, service: WeatherService, db: Database)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/shared/store/weather.effects.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                    WeatherService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                    Database\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processData(data: WeatherData[], queryData: WeatherDataHistory[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.effects.ts:99\n                            \n                        \n\n\n                \n                    \n                            Manages data to get an history-based model\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    WeatherData[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        queryData\n                                                        \n                                                                    WeatherDataHistory[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     WeatherDataHistory[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        load$:     \n\n                    \n                \n                    \n                        \n                            Default value : (): Observable =>\n    this.actions$.pipe(\n      ofType(WeatherActionTypes.Load),\n      map(action => action.payload.join()),\n      mergeMap(ids => {\n        // fetch data from service\n        return this.service.getCitiesData(ids).pipe(\n          switchMap(data => {\n            // fetch data from database\n            return this.db.query('weather').pipe(\n              toArray(),\n              // process and stores data\n              switchMap(queryData => {\n                const processedData = this.processData(data, queryData);\n                /*\n                 * Need to subscribe to make observable effective... bad hack i know\n                 * Ideally a new Action might be hitting this so subscription would\n                 * be done automatically\n                 */\n                this.db.insert('weather', processedData).subscribe(_ => {});\n                return processedData;\n              }),\n            );\n          }),\n          switchMap(_ => this.db.query('weather')),\n          map(_ => new LoadSuccess()),\n          catchError(err =>\n            of(\n              new LoadError({\n                code: err.error.cod,\n                message: err.error.message,\n              }),\n            ),\n          ),\n        );\n      }),\n    )\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.effects.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadHistory$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loadHistory$:     \n\n                    \n                \n                    \n                        \n                            Default value : (): Observable =>\n    this.actions$.pipe(\n      ofType(WeatherActionTypes.LoadHistory),\n      switchMap(_ => {\n        return this.db.query('weather').pipe(\n          toArray(),\n          map(data => new LoadHistorySuccess(data)),\n          catchError(err =>\n            of(\n              new LoadHistoryError({\n                code: err.error.cod,\n                message: err.error.message,\n              }),\n            ),\n          ),\n        );\n      }),\n    )\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.effects.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openDB$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        openDB$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : defer(() => {\n    return this.db.open('weather');\n  })\n                        \n                    \n                    \n                        \n                            Decorators : Effect\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/shared/store/weather.effects.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Database } from '@ngrx/db';\nimport { Actions, Effect, ofType } from '@ngrx/effects';\nimport { Action } from '@ngrx/store';\nimport { defer, Observable, of } from 'rxjs';\nimport { catchError, map, mergeMap, toArray, switchMap } from 'rxjs/operators';\n\nimport {\n  Load,\n  LoadSuccess,\n  LoadError,\n  LoadHistory,\n  LoadHistorySuccess,\n  LoadHistoryError,\n  WeatherActionTypes,\n} from '@app/weather/shared/store/weather.actions';\nimport { WeatherService } from '@app/weather/shared/weather.service';\nimport {\n  WeatherData,\n  WeatherDataHistory,\n} from '@app/weather/shared/weather.model';\n\n@Injectable()\nexport class WeatherEffects {\n  @Effect({ dispatch: false })\n  openDB$: Observable = defer(() => {\n    return this.db.open('weather');\n  });\n\n  @Effect()\n  load$ = (): Observable =>\n    this.actions$.pipe(\n      ofType(WeatherActionTypes.Load),\n      map(action => action.payload.join()),\n      mergeMap(ids => {\n        // fetch data from service\n        return this.service.getCitiesData(ids).pipe(\n          switchMap(data => {\n            // fetch data from database\n            return this.db.query('weather').pipe(\n              toArray(),\n              // process and stores data\n              switchMap(queryData => {\n                const processedData = this.processData(data, queryData);\n                /*\n                 * Need to subscribe to make observable effective... bad hack i know\n                 * Ideally a new Action might be hitting this so subscription would\n                 * be done automatically\n                 */\n                this.db.insert('weather', processedData).subscribe(_ => {});\n                return processedData;\n              }),\n            );\n          }),\n          switchMap(_ => this.db.query('weather')),\n          map(_ => new LoadSuccess()),\n          catchError(err =>\n            of(\n              new LoadError({\n                code: err.error.cod,\n                message: err.error.message,\n              }),\n            ),\n          ),\n        );\n      }),\n    )\n\n  @Effect()\n  loadHistory$ = (): Observable =>\n    this.actions$.pipe(\n      ofType(WeatherActionTypes.LoadHistory),\n      switchMap(_ => {\n        return this.db.query('weather').pipe(\n          toArray(),\n          map(data => new LoadHistorySuccess(data)),\n          catchError(err =>\n            of(\n              new LoadHistoryError({\n                code: err.error.cod,\n                message: err.error.message,\n              }),\n            ),\n          ),\n        );\n      }),\n    )\n\n  constructor(\n    private actions$: Actions,\n    private service: WeatherService,\n    private db: Database,\n  ) {}\n\n  /**\n   * Manages data to get an history-based model\n   * @param data\n   */\n  private processData(\n    data: WeatherData[],\n    queryData: WeatherDataHistory[],\n  ): WeatherDataHistory[] {\n    let processedData = [];\n\n    data.forEach(item => {\n      let cityData = queryData.find(it => it.id === item.id);\n\n      if (cityData) {\n        // if city already exists, updates history\n        cityData.history = [...cityData.history, item];\n      } else {\n        // else, creates weather data history model\n        cityData = {\n          id: item.id,\n          history: [item],\n        };\n      }\n\n      // and updates the main array\n      processedData = [...processedData, cityData];\n    });\n\n    return processedData;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherHistoryComponent.html":{"url":"components/WeatherHistoryComponent.html","title":"component - WeatherHistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-history/weather-history.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-history\n            \n\n            \n                styleUrls\n                weather-history.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-history.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-history/weather-history.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-history/weather-history.component.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_BOTTOM_SHEET_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-weather-history',\n  templateUrl: './weather-history.component.html',\n  styleUrls: ['./weather-history.component.scss'],\n})\nexport class WeatherHistoryComponent {\n  constructor(@Inject(MAT_BOTTOM_SHEET_DATA) public data: any) {}\n}\n\n    \n\n    \n        History {{ data[0]?.name }}\n\n  \n    \n      \n        Date\n        {{ item.dt | date:'dd/MM/yyyy a' }}\n      \n      \n        Temp\n        {{ item.main.temp }}ºc\n      \n    \n    \n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'History {{ data[0]?.name }}                    Date        {{ item.dt | date:\\'dd/MM/yyyy a\\' }}                    Temp        {{ item.main.temp }}ºc                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'WeatherCardComponent', 'selector': 'app-weather-card'},{'name': 'WeatherHistoryComponent', 'selector': 'app-weather-history'},{'name': 'WeatherListComponent', 'selector': 'app-weather-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherHistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherListComponent.html":{"url":"components/WeatherListComponent.html","title":"component - WeatherListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WeatherListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather-list/weather-list.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather-list\n            \n\n            \n                styleUrls\n                weather-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./weather-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                interval$\n                            \n                            \n                                subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                manageState\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cityIds\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, snackbar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather-list/weather-list.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackbar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cityIds\n                    \n                    \n                            \n                            Type:    number[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/app/weather/weather-list/weather-list.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            manageState\n                            \n                            \n                        \n                    \n                \n                \n                    \nmanageState(state: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-list/weather-list.component.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        state\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-list/weather-list.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/weather-list/weather-list.component.ts:27\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        data:     WeatherDataHistory[]\n\n                    \n                \n                    \n                        \n                            Type :     WeatherDataHistory[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-list/weather-list.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            interval$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        interval$:     \n\n                    \n                \n                    \n                        \n                            Default value : interval(environment.refreshTimeout)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-list/weather-list.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            subscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subscription:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subscription()\n                        \n                    \n                        \n                            \n                                    Defined in src/app/weather/weather-list/weather-list.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Store, select } from '@ngrx/store';\nimport { Subscription, interval } from 'rxjs';\n\nimport * as WeatherActions from '@app/weather/shared/store/weather.actions';\nimport { WeatherDataHistory } from '@app/weather/shared/weather.model';\nimport { State } from '@app/weather/shared/store/weather.reducers';\nimport { environment } from '@environments/environment';\n\n@Component({\n  selector: 'app-weather-list',\n  templateUrl: './weather-list.component.html',\n  styleUrls: ['./weather-list.component.scss'],\n})\nexport class WeatherListComponent implements OnInit, OnDestroy {\n  @Input() cityIds: number[];\n  data: WeatherDataHistory[] = [];\n  subscription = new Subscription();\n  interval$ = interval(environment.refreshTimeout);\n\n  constructor(\n    private readonly store: Store,\n    private readonly snackbar: MatSnackBar,\n  ) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(new WeatherActions.Load(this.cityIds));\n\n    this.subscription.add(\n      this.store.pipe(select('weather')).subscribe(this.manageState.bind(this)),\n    );\n\n    this.subscription.add(\n      // refresh data interval here\n      this.interval$.subscribe(_ => {\n        this.store.dispatch(new WeatherActions.Load(this.cityIds));\n      }),\n    );\n  }\n\n  manageState(state: { type: string; payload?: any }): void {\n    switch (state.type) {\n      case WeatherActions.WeatherActionTypes.LoadSuccess:\n        this.store.dispatch(new WeatherActions.LoadHistory());\n        break;\n      case WeatherActions.WeatherActionTypes.LoadHistorySuccess:\n        this.data = state.payload;\n        break;\n      case WeatherActions.WeatherActionTypes.LoadError:\n      case WeatherActions.WeatherActionTypes.LoadHistoryError:\n        this.snackbar.open(state.payload.message);\n        break;\n      default:\n        break;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  \n  \n\n\n  \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BaseComponent', 'selector': 'app-base'},{'name': 'WeatherCardComponent', 'selector': 'app-weather-card'},{'name': 'WeatherHistoryComponent', 'selector': 'app-weather-history'},{'name': 'WeatherListComponent', 'selector': 'app-weather-list'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WeatherModule.html":{"url":"modules/WeatherModule.html","title":"module - WeatherModule","body":"\n                   \n\n\n\n\n  Modules\n  WeatherModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_imports\n\n\n\ncluster_WeatherModule_exports\n\n\n\n\nWeatherCardComponent\n\nWeatherCardComponent\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nWeatherCardComponent->WeatherModule\n\n\n\n\n\nWeatherHistoryComponent\n\nWeatherHistoryComponent\n\nWeatherModule -->\n\nWeatherHistoryComponent->WeatherModule\n\n\n\n\n\nWeatherListComponent\n\nWeatherListComponent\n\nWeatherModule -->\n\nWeatherListComponent->WeatherModule\n\n\n\n\n\nWeatherListComponent \n\nWeatherListComponent \n\nWeatherListComponent  -->\n\nWeatherModule->WeatherListComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/weather/weather.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WeatherCardComponent\n                            \n                            \n                                WeatherHistoryComponent\n                            \n                            \n                                WeatherListComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                WeatherHistoryComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    WeatherListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreModule } from '@ngrx/store';\n\nimport { SharedModule } from '@shared/shared.module';\n\nimport { WeatherEffects } from '@app/weather/shared/store/weather.effects';\nimport { weatherReducer } from '@app/weather/shared/store/weather.reducers';\nimport { WeatherCardComponent } from '@app/weather/weather-card/weather-card.component';\nimport { WeatherListComponent } from '@app/weather/weather-list/weather-list.component';\nimport { WeatherHistoryComponent } from '@app/weather/weather-history/weather-history.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    HttpClientModule,\n    StoreModule.forFeature('weather', weatherReducer),\n    EffectsModule.forFeature([WeatherEffects]),\n  ],\n  declarations: [\n    WeatherListComponent,\n    WeatherCardComponent,\n    WeatherHistoryComponent,\n  ],\n  exports: [WeatherListComponent],\n  entryComponents: [WeatherHistoryComponent],\n})\nexport class WeatherModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherService.html":{"url":"injectables/WeatherService.html","title":"injectable - WeatherService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  WeatherService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCitiesData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/shared/weather.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCitiesData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCitiesData(ids: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/weather/shared/weather.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ids\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport {\n  WeatherData,\n  WeatherDataBulkResponse,\n} from '@app/weather/shared/weather.model';\nimport { environment } from '@environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WeatherService {\n  constructor(private readonly http: HttpClient) {}\n\n  getCitiesData(ids: string): Observable {\n    return this.http\n      .get(\n        `${environment.WEATHER_API}/group?id=${ids}&units=metric&appid=${\n          environment.WEATHER_API_KEY\n        }`,\n      )\n      .pipe(map(data => data.list));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Wind.html":{"url":"interfaces/Wind.html","title":"interface - Wind","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Wind\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/weather/shared/weather.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        deg\n                                \n                                \n                                        speed\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deg\n                                    \n                                \n                                \n                                    \n                                        deg:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speed\n                                    \n                                \n                                \n                                    \n                                        speed:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherDataHistory {\n  id: number;\n  history: WeatherData[];\n}\n\nexport interface WeatherDataBulkResponse {\n  cnt: number;\n  list: WeatherData[];\n}\n\nexport interface WeatherDataErrorResponse {\n  message: string;\n  code: number;\n}\n\nexport interface WeatherData {\n  coord: Coord;\n  weather: Weather[];\n  base: string;\n  main: Main;\n  visibility: number;\n  wind: Wind;\n  clouds: Clouds;\n  dt: number;\n  sys: Sys;\n  id: number;\n  name: string;\n  cod: number;\n}\n\ninterface Coord {\n  lon: number;\n  lat: number;\n}\n\ninterface Weather {\n  id: number;\n  main: string;\n  description: string;\n  icon: string;\n}\n\ninterface Main {\n  temp: number;\n  pressure: number;\n  humidity: number;\n  temp_min: number;\n  temp_max: number;\n}\n\ninterface Wind {\n  speed: number;\n  deg: number;\n}\n\ninterface Clouds {\n  all: number;\n}\n\ninterface Sys {\n  type: number;\n  id: number;\n  message: number;\n  country: string;\n  sunrise: number;\n  sunset: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/app.reducers.ts\n            \n            \n                interface\n            \n            \n                State\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.reducers.ts\n            \n            \n                function\n            \n            \n                logger\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.reducers.ts\n            \n            \n                variable\n            \n            \n                metaReducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/app.reducers.ts\n            \n            \n                variable\n            \n            \n                reducers\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/base/base.component.ts\n            \n            \n                component\n            \n            \n                BaseComponent\n            \n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                    src/app/db.ts\n            \n            \n                variable\n            \n            \n                schema\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.actions.ts\n            \n            \n                class\n            \n            \n                Load\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.actions.ts\n            \n            \n                class\n            \n            \n                LoadError\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.actions.ts\n            \n            \n                class\n            \n            \n                LoadHistory\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.actions.ts\n            \n            \n                class\n            \n            \n                LoadHistoryError\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.actions.ts\n            \n            \n                class\n            \n            \n                LoadHistorySuccess\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.actions.ts\n            \n            \n                class\n            \n            \n                LoadSuccess\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.effects.ts\n            \n            \n                injectable\n            \n            \n                WeatherEffects\n            \n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.reducers.ts\n            \n            \n                interface\n            \n            \n                State\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.reducers.ts\n            \n            \n                function\n            \n            \n                weatherReducer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/store/weather.reducers.ts\n            \n            \n                variable\n            \n            \n                initialState\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.mock.ts\n            \n            \n                variable\n            \n            \n                MOCK\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                Clouds\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                Coord\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                Main\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                Sys\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                Weather\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                WeatherData\n            \n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                WeatherDataBulkResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                WeatherDataErrorResponse\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                WeatherDataHistory\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.model.ts\n            \n            \n                interface\n            \n            \n                Wind\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/weather/shared/weather.service.ts\n            \n            \n                injectable\n            \n            \n                WeatherService\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-card/weather-card.component.ts\n            \n            \n                component\n            \n            \n                WeatherCardComponent\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-history/weather-history.component.ts\n            \n            \n                component\n            \n            \n                WeatherHistoryComponent\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    src/app/weather/weather-list/weather-list.component.ts\n            \n            \n                component\n            \n            \n                WeatherListComponent\n            \n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.1.0\n        \n            @angular/cdk : ^6.2.0\n        \n            @angular/common : ^6.1.0\n        \n            @angular/compiler : ^6.1.0\n        \n            @angular/core : ^6.1.0\n        \n            @angular/forms : ^6.1.0\n        \n            @angular/http : ^6.1.0\n        \n            @angular/material : ^6.4.3\n        \n            @angular/platform-browser : ^6.1.0\n        \n            @angular/platform-browser-dynamic : ^6.1.0\n        \n            @angular/router : ^6.1.0\n        \n            @ngrx/db : ^2.1.0\n        \n            @ngrx/effects : ^6.1.0\n        \n            @ngrx/entity : ^6.1.0\n        \n            @ngrx/store : ^6.1.0\n        \n            bootstrap-css-only : ^4.1.1\n        \n            core-js : ^2.5.4\n        \n            ngrx-store-freeze : ^0.2.4\n        \n            rxjs : ^6.0.0\n        \n            rxjs-compat : ^6.2.2\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WeatherActionTypes   (src/.../weather.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/weather/shared/store/weather.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WeatherActionTypes\n                    \n                \n                        \n                            \n                                 Load\n                            \n                        \n                        \n                            \n                                Value: [Weather] Load Weather Data\n                            \n                        \n                        \n                            \n                                 LoadSuccess\n                            \n                        \n                        \n                            \n                                Value: [Weather] Weather Data Loaded\n                            \n                        \n                        \n                            \n                                 LoadError\n                            \n                        \n                        \n                            \n                                Value: [Weather] Weather Data Error\n                            \n                        \n                        \n                            \n                                 LoadHistory\n                            \n                        \n                        \n                            \n                                Value: [Weather] Load City Weather History\n                            \n                        \n                        \n                            \n                                 LoadHistorySuccess\n                            \n                        \n                        \n                            \n                                Value: [Weather] Load City Weather History Success\n                            \n                        \n                        \n                            \n                                 LoadHistoryError\n                            \n                        \n                        \n                            \n                                Value: [Weather] Load City Weather History Error\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            logger   (src/.../app.reducers.ts)\n                        \n                        \n                            weatherReducer   (src/.../weather.reducers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            logger\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogger(reducer: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reducer\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    src/app/weather/shared/store/weather.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            weatherReducer\n                            \n                            \n                        \n                    \n                \n                \n                    \nweatherReducer(_state: undefined, action: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _state\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        action\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNOTES:\n\nAdd interceptor for error manage\n-\n\nWeatherApp\nThis project was generated with Angular CLI version 6.1.3.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WeatherModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_WeatherModule\n\n\n\ncluster_WeatherModule_declarations\n\n\n\ncluster_WeatherModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nBaseComponent\n\nBaseComponent\n\nAppModule -->\n\nBaseComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nWeatherModule\n\nWeatherModule\n\nWeatherModule -->\n\nSharedModule->WeatherModule\n\n\n\n\n\nMaterialModule \n\nMaterialModule \n\nMaterialModule  -->\n\nSharedModule->MaterialModule \n\n\n\nAppModule -->\n\nWeatherModule->AppModule\n\n\n\n\n\nWeatherListComponent \n\nWeatherListComponent \n\nWeatherListComponent  -->\n\nWeatherModule->WeatherListComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nSharedModule -->\n\nMaterialModule->SharedModule\n\n\n\n\n\nWeatherCardComponent\n\nWeatherCardComponent\n\nWeatherModule -->\n\nWeatherCardComponent->WeatherModule\n\n\n\n\n\nWeatherHistoryComponent\n\nWeatherHistoryComponent\n\nWeatherModule -->\n\nWeatherHistoryComponent->WeatherModule\n\n\n\n\n\nWeatherListComponent\n\nWeatherListComponent\n\nWeatherModule -->\n\nWeatherListComponent->WeatherModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            4 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        5 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        6 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        12 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            WeatherActionsUnion   (src/.../weather.actions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/weather/shared/store/weather.actions.ts\n    \n        \n            \n                \n                    \n                        \n                        WeatherActionsUnion\n                    \n                \n                \n                    \n                        WeatherActionsUnion:     Load | LoadSuccess | LoadError | LoadHistory | LoadHistorySuccess | LoadHistoryError\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            initialState   (src/.../weather.reducers.ts)\n                        \n                        \n                            metaReducers   (src/.../app.reducers.ts)\n                        \n                        \n                            MOCK   (src/.../weather.mock.ts)\n                        \n                        \n                            reducers   (src/.../app.reducers.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            schema   (src/.../db.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  WEATHER_API: 'http://localhost:3000', // TODO\n  // WEATHER_API: 'https://api.openweathermap.org/data/2.5',\n  WEATHER_API_KEY: '390f49ffd9f3bf1b179bdafb76571fec',\n  cityIds: [\n    3871336, // Santiago, CL\n    3433955, // Buenos Aires, AR\n    3936456, // Lima, PE\n    3448439, // São Paulo, BR\n  ],\n  refreshTimeout: 3 * 60000, // 3 minutes\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  WEATHER_API: 'http://localhost:3000', // TODO remove\n  // WEATHER_API: 'https://api.openweathermap.org/data/2.5',\n  WEATHER_API_KEY: '390f49ffd9f3bf1b179bdafb76571fec',\n  cityIds: [\n    3871336, // Santiago, CL\n    3433955, // Buenos Aires, AR\n    3936456, // Lima, PE\n    3448439, // São Paulo, BR\n  ],\n  refreshTimeout: 3 * 60000, // 3 minutes\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/shared/store/weather.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initialState:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  type: '[Weather] Initial',\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/app.reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        metaReducers:     MetaReducer[]\n\n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production\n  ? [logger, storeFreeze]\n  : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        reducers:     ActionReducerMap\n\n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n\n\n            \n        \n\n    src/app/weather/shared/weather.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MOCK\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MOCK:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  coord: { lon: 145.77, lat: -16.92 },\n  weather: [\n    { id: 802, main: 'Clouds', description: 'scattered clouds', icon: '03n' },\n  ],\n  base: 'stations',\n  main: {\n    temp: 300.15,\n    pressure: 1007,\n    humidity: 74,\n    temp_min: 300.15,\n    temp_max: 300.15,\n  },\n  visibility: 10000,\n  wind: { speed: 3.6, deg: 160 },\n  clouds: { all: 40 },\n  dt: 1485790200,\n  sys: {\n    type: 1,\n    id: 8166,\n    message: 0.2064,\n    country: 'AU',\n    sunrise: 1485720272,\n    sunset: 1485766550,\n  },\n  id: 2172797,\n  name: 'Cairns',\n  cod: 200,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/db.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            schema\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schema:     DBSchema\n\n                    \n                \n                    \n                        \n                            Type :     DBSchema\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  version: 1,\n  name: 'weather_app',\n  stores: {\n    weather: {\n      autoIncrement: true,\n      primaryKey: 'id',\n    },\n  },\n}\n                        \n                    \n\n                \n                    \n                        ngrx/db uses a simple schema config object to initialize stores in IndexedDB.\n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
